<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>mybatis-plus代码生成器</title>
    <link href="/posts/47374.html"/>
    <url>/posts/47374.html</url>
    
    <content type="html"><![CDATA[<p>MyBatis-Plus （简称 MP）是一个 MyBatis的增强工具，在 MyBatis 的基础上只做增强不做改变，为简化开发、提高效率而生。</p><h2 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h2><ul><li><strong>无侵入</strong>：只做增强不做改变，引入它不会对现有工程产生影响，如丝般顺滑</li><li><strong>损耗小</strong>：启动即会自动注入基本 CURD，性能基本无损耗，直接面向对象操作</li><li><strong>强大的 CRUD 操作</strong>：内置通用 Mapper、通用 Service，仅仅通过少量配置即可实现单表大部分 CRUD 操作，更有强大的条件构造器，满足各类使用需求</li><li><strong>支持 Lambda 形式调用</strong>：通过 Lambda 表达式，方便的编写各类查询条件，无需再担心字段写错</li><li><strong>支持主键自动生成</strong>：支持多达 4 种主键策略（内含分布式唯一 ID 生成器 - Sequence），可自由配置，完美解决主键问题</li><li><strong>支持 ActiveRecord 模式</strong>：支持 ActiveRecord 形式调用，实体类只需继承 Model 类即可进行强大的 CRUD 操作</li><li><strong>支持自定义全局通用操作</strong>：支持全局通用方法注入（ Write once, use anywhere ）</li><li><strong>内置代码生成器</strong>：采用代码或者 Maven 插件可快速生成 Mapper 、 Model 、 Service 、 Controller 层代码，支持模板引擎，更有超多自定义配置等您来使用</li><li><strong>内置分页插件</strong>：基于 MyBatis 物理分页，开发者无需关心具体操作，配置好插件之后，写分页等同于普通 List 查询</li><li><strong>分页插件支持多种数据库</strong>：支持 MySQL、MariaDB、Oracle、DB2、H2、HSQL、SQLite、Postgre、SQLServer 等多种数据库</li><li><strong>内置性能分析插件</strong>：可输出 SQL 语句以及其执行时间，建议开发测试时启用该功能，能快速揪出慢查询</li><li><strong>内置全局拦截插件</strong>：提供全表 delete 、 update 操作智能分析阻断，也可自定义拦截规则，预防误操作</li></ul><h2 id="支持数据库"><a href="#支持数据库" class="headerlink" title="支持数据库"></a>支持数据库</h2><blockquote><p>任何能使用 <code>MyBatis</code> 进行 CRUD, 并且支持标准 SQL 的数据库，具体支持情况如下，如果不在下列表查看分页部分教程 PR 您的支持。</p></blockquote><ul><li>MySQL，Oracle，DB2，H2，HSQL，SQLite，PostgreSQL，SQLServer，Phoenix，Gauss ，ClickHouse，Sybase，OceanBase，Firebird，Cubrid，Goldilocks，csiidb，informix，TDengine，redshift</li><li>达梦数据库，虚谷数据库，人大金仓数据库，南大通用(华库)数据库，南大通用数据库，神通数据库，瀚高数据库，优炫数据库，星瑞格数据库</li></ul><h2 id="框架结构"><a href="#框架结构" class="headerlink" title="框架结构"></a>框架结构</h2><p><img src="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311201113809.jpg" srcset="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311201535395.gif" lazyload></p><h2 id="如何使用代码生成器"><a href="#如何使用代码生成器" class="headerlink" title="如何使用代码生成器"></a><strong>如何使用代码生成器</strong></h2><ul><li>首先在pom文件加入依赖 数据库驱动依赖有就不需要再加了</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- mybatis-plus--&gt;</span><br>     <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>         <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.baomidou<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>         <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>         <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.3.1<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>     <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>     <br>      <span class="hljs-comment">&lt;!--数据库驱动--&gt;</span><br>       <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>         <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.mysql<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>         <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>mysql-connector-j<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>         <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>8.0.32<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>     <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br>     <br>        <span class="hljs-comment">&lt;!--        mybatis代码生成器--&gt;</span><br>     <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>         <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.baomidou<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>         <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>mybatis-plus-generator<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>         <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.4.1<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>     <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><ul><li>创建配置类</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> cn.study.generator;<br><br><br><span class="hljs-keyword">import</span> com.baomidou.mybatisplus.annotation.DbType;<br><span class="hljs-keyword">import</span> com.baomidou.mybatisplus.generator.AutoGenerator;<br><span class="hljs-keyword">import</span> com.baomidou.mybatisplus.generator.config.DataSourceConfig;<br><span class="hljs-keyword">import</span> com.baomidou.mybatisplus.generator.config.GlobalConfig;<br><span class="hljs-keyword">import</span> com.baomidou.mybatisplus.generator.config.PackageConfig;<br><span class="hljs-keyword">import</span> com.baomidou.mybatisplus.generator.config.StrategyConfig;<br><span class="hljs-keyword">import</span> com.baomidou.mybatisplus.generator.config.rules.NamingStrategy;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">CodeGet</span> &#123;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br><br>        <span class="hljs-comment">// 1、创建代码生成器</span><br>        <span class="hljs-type">AutoGenerator</span> <span class="hljs-variable">mpg</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">AutoGenerator</span>();<br><br>        <span class="hljs-comment">// 2、全局配置</span><br>        <span class="hljs-comment">// 全局配置</span><br>        <span class="hljs-type">GlobalConfig</span> <span class="hljs-variable">gc</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">GlobalConfig</span>();<br>        <span class="hljs-comment">//根目录</span><br>        gc.setOutputDir(<span class="hljs-string">&quot;D:\\Codes\\workspace\\study-Project\\study-admin\\&quot;</span>+<span class="hljs-string">&quot;/src/main/java&quot;</span>);<br>        gc.setServiceName(<span class="hljs-string">&quot;%sService&quot;</span>);<span class="hljs-comment">//去掉Service接口的首字母I</span><br>        gc.setAuthor(<span class="hljs-string">&quot;Lu&quot;</span>);<span class="hljs-comment">//作者</span><br>        gc.setOpen(<span class="hljs-literal">false</span>);<br>        mpg.setGlobalConfig(gc);<br><br>        <span class="hljs-comment">// 3、数据源配置</span><br>        <span class="hljs-type">DataSourceConfig</span> <span class="hljs-variable">dsc</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">DataSourceConfig</span>();<br>        dsc.setUrl(<span class="hljs-string">&quot;jdbc:mysql://localhost:3306/study?serverTimezone=GMT%2B8&amp;useSSL=false&quot;</span>);<br>        dsc.setDriverName(<span class="hljs-string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>);<br>        dsc.setUsername(<span class="hljs-string">&quot;root&quot;</span>);<span class="hljs-comment">//数据库账号</span><br>        dsc.setPassword(<span class="hljs-string">&quot;Lxx@123&quot;</span>);<span class="hljs-comment">//数据库密码</span><br>        dsc.setDbType(DbType.MYSQL);<br>        mpg.setDataSource(dsc);<br><br>        <span class="hljs-comment">// 4、包配置</span><br>        <span class="hljs-type">PackageConfig</span> <span class="hljs-variable">pc</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">PackageConfig</span>();<br>        pc.setParent(<span class="hljs-string">&quot;cn.study.lu&quot;</span>);<br><span class="hljs-comment">//        pc.setModuleName(&quot;process&quot;); //模块名</span><br>        pc.setController(<span class="hljs-string">&quot;controller.mp&quot;</span>);<br>        pc.setService(<span class="hljs-string">&quot;service&quot;</span>);<br>        pc.setMapper(<span class="hljs-string">&quot;mapper&quot;</span>);<br>        mpg.setPackageInfo(pc);<br><br>        <span class="hljs-comment">// 5、策略配置</span><br>        <span class="hljs-type">StrategyConfig</span> <span class="hljs-variable">strategy</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">StrategyConfig</span>();<br><br>        strategy.setInclude(<span class="hljs-string">&quot;payroll&quot;</span>);<span class="hljs-comment">//表名</span><br><br>        strategy.setNaming(NamingStrategy.underline_to_camel);<span class="hljs-comment">//数据库表映射到实体的命名策略</span><br><br>        strategy.setColumnNaming(NamingStrategy.underline_to_camel);<span class="hljs-comment">//数据库表字段映射到实体的命名策略</span><br>        strategy.setEntityLombokModel(<span class="hljs-literal">true</span>); <span class="hljs-comment">// lombok 模型 @Accessors(chain = true) setter链式操作</span><br><br>        strategy.setRestControllerStyle(<span class="hljs-literal">true</span>); <span class="hljs-comment">//restful api风格控制器</span><br>        strategy.setControllerMappingHyphenStyle(<span class="hljs-literal">true</span>); <span class="hljs-comment">//url中驼峰转连字符</span><br><br>        mpg.setStrategy(strategy);<br><br>        <span class="hljs-comment">// 6、执行</span><br>        mpg.execute();<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><ul><li>需要注意的地方  此处的名称需要保持一致</li></ul><p><img src="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311201124709.png" srcset="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311201535395.gif" lazyload></p><p><img src="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311201124492.png" srcset="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311201535395.gif" lazyload></p><ul><li>启动创建的类 便会自动生成代码</li></ul><p><img src="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311201128616.png" srcset="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311201535395.gif" lazyload></p><p><img src="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311201128697.png" srcset="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311201535395.gif" lazyload></p><ul><li>测试代码生成器的代码是否能够正常运行 启动项目进行测试</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> cn.study.lu.controller.mp;<br><br><br><span class="hljs-keyword">import</span> cn.study.common.result.JsonResult;<br><span class="hljs-keyword">import</span> cn.study.common.result.ResultEntity;<br><span class="hljs-keyword">import</span> cn.study.lu.entity.MpTest;<br><span class="hljs-keyword">import</span> cn.study.lu.service.MpTestService;<br><span class="hljs-keyword">import</span> io.swagger.annotations.ApiOperation;<br><span class="hljs-keyword">import</span> org.springframework.beans.factory.annotation.Autowired;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.PostMapping;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;<br><br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.RestController;<br><br><span class="hljs-keyword">import</span> java.util.List;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * &lt;p&gt;</span><br><span class="hljs-comment"> *  前端控制器</span><br><span class="hljs-comment"> * &lt;/p&gt;</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> Lu</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@since</span> 2023-11-20</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@RestController</span><br><span class="hljs-meta">@RequestMapping(&quot;/mp-test&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MpTestController</span> &#123;<br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> MpTestService mpTestService;<br><br>    <span class="hljs-meta">@PostMapping(&quot;list&quot;)</span><br>    <span class="hljs-meta">@ApiOperation(&quot;测试mp&quot;)</span><br>    <span class="hljs-keyword">public</span> ResultEntity <span class="hljs-title function_">test</span><span class="hljs-params">()</span>&#123;<br>        List&lt;MpTest&gt; list = mpTestService.list();<br>        <span class="hljs-keyword">return</span> JsonResult.success(list);<br>    &#125;<br><br>&#125;<br><br><br></code></pre></td></tr></table></figure><ul><li>测试结果</li></ul><p><img src="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311201344684.png" srcset="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311201535395.gif" lazyload></p>]]></content>
    
    
    <categories>
      
      <category>工具</category>
      
    </categories>
    
    
    <tags>
      
      <tag>-SQL -便捷</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>递归</title>
    <link href="/posts/38362.html"/>
    <url>/posts/38362.html</url>
    
    <content type="html"><![CDATA[<h2 id="主要介绍工作中需要将数据库中的数据处理成树形结构"><a href="#主要介绍工作中需要将数据库中的数据处理成树形结构" class="headerlink" title="主要介绍工作中需要将数据库中的数据处理成树形结构"></a>主要介绍工作中需要将数据库中的数据处理成树形结构</h2><h5 id="SQL脚本"><a href="#SQL脚本" class="headerlink" title="SQL脚本"></a>SQL脚本</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs java">SET NAMES utf8mb4;<br><span class="hljs-type">SET</span> <span class="hljs-variable">FOREIGN_KEY_CHECKS</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;<br><br>-- ----------------------------<br>-- Table structure <span class="hljs-keyword">for</span> category<br>-- ----------------------------<br>DROP TABLE IF EXISTS `category`;<br>CREATE TABLE `category`  (<br>  `id` <span class="hljs-type">int</span> NOT NULL AUTO_INCREMENT COMMENT <span class="hljs-string">&#x27;主键ID&#x27;</span>,<br>  `name` varchar(<span class="hljs-number">255</span>) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT <span class="hljs-string">&#x27;商品分类名称&#x27;</span>,<br>  `inventory` varchar(<span class="hljs-number">255</span>) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT <span class="hljs-string">&#x27;库存&#x27;</span>,<br>  `pid` <span class="hljs-type">int</span> NULL DEFAULT NULL COMMENT <span class="hljs-string">&#x27;上级ID&#x27;</span>,<br>  PRIMARY <span class="hljs-title function_">KEY</span> <span class="hljs-params">(`id`)</span> USING BTREE<br>) ENGINE = <span class="hljs-type">InnoDB</span> <span class="hljs-variable">AUTO_INCREMENT</span> <span class="hljs-operator">=</span> <span class="hljs-number">68</span> <span class="hljs-type">CHARACTER</span> <span class="hljs-variable">SET</span> <span class="hljs-operator">=</span> <span class="hljs-type">utf8mb4</span> <span class="hljs-variable">COLLATE</span> <span class="hljs-operator">=</span> <span class="hljs-type">utf8mb4_0900_ai_ci</span> <span class="hljs-variable">ROW_FORMAT</span> <span class="hljs-operator">=</span> DYNAMIC;<br><br>-- ----------------------------<br>-- Records of category<br>-- ----------------------------<br>INSERT INTO `category` VALUES (<span class="hljs-number">1</span>, <span class="hljs-string">&#x27;手机数码&#x27;</span>, <span class="hljs-string">&#x27;5000&#x27;</span>, NULL);<br>INSERT INTO `category` VALUES (<span class="hljs-number">2</span>, <span class="hljs-string">&#x27;小米&#x27;</span>, <span class="hljs-string">&#x27;2000&#x27;</span>, <span class="hljs-number">1</span>);<br>INSERT INTO `category` VALUES (<span class="hljs-number">3</span>, <span class="hljs-string">&#x27;华为&#x27;</span>, <span class="hljs-string">&#x27;2000&#x27;</span>, <span class="hljs-number">1</span>);<br>INSERT INTO `category` VALUES (<span class="hljs-number">4</span>, <span class="hljs-string">&#x27;努比亚&#x27;</span>, <span class="hljs-string">&#x27;1000&#x27;</span>, <span class="hljs-number">1</span>);<br>INSERT INTO `category` VALUES (<span class="hljs-number">5</span>, <span class="hljs-string">&#x27;休闲零食&#x27;</span>, <span class="hljs-string">&#x27;8000&#x27;</span>, NULL);<br>INSERT INTO `category` VALUES (<span class="hljs-number">6</span>, <span class="hljs-string">&#x27;薯片&#x27;</span>, <span class="hljs-string">&#x27;1000&#x27;</span>, <span class="hljs-number">5</span>);<br>INSERT INTO `category` VALUES (<span class="hljs-number">7</span>, <span class="hljs-string">&#x27;糖果&#x27;</span>, <span class="hljs-string">&#x27;3000&#x27;</span>, <span class="hljs-number">5</span>);<br>INSERT INTO `category` VALUES (<span class="hljs-number">8</span>, <span class="hljs-string">&#x27;果干&#x27;</span>, <span class="hljs-string">&#x27;1000&#x27;</span>, <span class="hljs-number">5</span>);<br>INSERT INTO `category` VALUES (<span class="hljs-number">9</span>, <span class="hljs-string">&#x27;辣条&#x27;</span>, <span class="hljs-string">&#x27;2000&#x27;</span>, <span class="hljs-number">5</span>);<br>INSERT INTO `category` VALUES (<span class="hljs-number">10</span>, <span class="hljs-string">&#x27;花生&#x27;</span>, <span class="hljs-string">&#x27;1000&#x27;</span>, <span class="hljs-number">5</span>);<br>INSERT INTO `category` VALUES (<span class="hljs-number">11</span>, <span class="hljs-string">&#x27;酒水饮料&#x27;</span>, <span class="hljs-string">&#x27;10000&#x27;</span>, NULL);<br>INSERT INTO `category` VALUES (<span class="hljs-number">12</span>, <span class="hljs-string">&#x27;白酒&#x27;</span>, <span class="hljs-string">&#x27;4000&#x27;</span>, <span class="hljs-number">11</span>);<br>INSERT INTO `category` VALUES (<span class="hljs-number">13</span>, <span class="hljs-string">&#x27;啤酒&#x27;</span>, <span class="hljs-string">&#x27;3000&#x27;</span>, <span class="hljs-number">11</span>);<br>INSERT INTO `category` VALUES (<span class="hljs-number">14</span>, <span class="hljs-string">&#x27;红酒&#x27;</span>, <span class="hljs-string">&#x27;3000&#x27;</span>, <span class="hljs-number">11</span>);<br>INSERT INTO `category` VALUES (<span class="hljs-number">15</span>, <span class="hljs-string">&#x27;口子窖&#x27;</span>, <span class="hljs-string">&#x27;300&#x27;</span>, <span class="hljs-number">12</span>);<br>INSERT INTO `category` VALUES (<span class="hljs-number">16</span>, <span class="hljs-string">&#x27;茅台&#x27;</span>, <span class="hljs-string">&#x27;1000&#x27;</span>, <span class="hljs-number">12</span>);<br>INSERT INTO `category` VALUES (<span class="hljs-number">17</span>, <span class="hljs-string">&#x27;古井贡酒&#x27;</span>, <span class="hljs-string">&#x27;2000&#x27;</span>, <span class="hljs-number">12</span>);<br>INSERT INTO `category` VALUES (<span class="hljs-number">18</span>, <span class="hljs-string">&#x27;稻花香&#x27;</span>, <span class="hljs-string">&#x27;700&#x27;</span>, <span class="hljs-number">12</span>);<br>INSERT INTO `category` VALUES (<span class="hljs-number">19</span>, <span class="hljs-string">&#x27;青岛啤酒&#x27;</span>, <span class="hljs-string">&#x27;1000&#x27;</span>, <span class="hljs-number">13</span>);<br>INSERT INTO `category` VALUES (<span class="hljs-number">20</span>, <span class="hljs-string">&#x27;燕京啤酒&#x27;</span>, <span class="hljs-string">&#x27;1500&#x27;</span>, <span class="hljs-number">13</span>);<br>INSERT INTO `category` VALUES (<span class="hljs-number">21</span>, <span class="hljs-string">&#x27;黑啤&#x27;</span>, <span class="hljs-string">&#x27;500&#x27;</span>, <span class="hljs-number">13</span>);<br><br><span class="hljs-type">SET</span> <span class="hljs-variable">FOREIGN_KEY_CHECKS</span> <span class="hljs-operator">=</span> <span class="hljs-number">1</span>;<br><br></code></pre></td></tr></table></figure><h5 id="创建对应的实体类"><a href="#创建对应的实体类" class="headerlink" title="创建对应的实体类"></a>创建对应的实体类</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> cn.study.model.entity.mp;<br><br><span class="hljs-keyword">import</span> com.baomidou.mybatisplus.annotation.IdType;<br><span class="hljs-keyword">import</span> com.baomidou.mybatisplus.annotation.TableField;<br><span class="hljs-keyword">import</span> com.baomidou.mybatisplus.annotation.TableId;<br><span class="hljs-keyword">import</span> java.io.Serializable;<br><span class="hljs-keyword">import</span> java.util.List;<br><br><span class="hljs-keyword">import</span> lombok.*;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * &lt;p&gt;</span><br><span class="hljs-comment"> * </span><br><span class="hljs-comment"> * &lt;/p&gt;</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> Lu</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@since</span> 2023-11-02</span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Data</span><br><span class="hljs-meta">@Builder</span><br><span class="hljs-meta">@NoArgsConstructor</span><br><span class="hljs-meta">@AllArgsConstructor</span><br><span class="hljs-meta">@EqualsAndHashCode(callSuper = false)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Category</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Serializable</span> &#123;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-type">long</span> <span class="hljs-variable">serialVersionUID</span> <span class="hljs-operator">=</span> <span class="hljs-number">1L</span>;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 主键ID</span><br><span class="hljs-comment">     */</span><br>      <span class="hljs-meta">@TableId(value = &quot;id&quot;, type = IdType.AUTO)</span><br>    <span class="hljs-keyword">private</span> Integer id;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 商品分类名称</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String name;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 库存</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> String inventory;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 上级ID</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> Integer pid;<br><br><br>    <span class="hljs-meta">@TableField(exist = false)</span><br>    List&lt;Category&gt; childrenList;<br><br><br>&#125;<br><br></code></pre></td></tr></table></figure><h5 id="创建控制层"><a href="#创建控制层" class="headerlink" title="创建控制层"></a>创建控制层</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> cn.study.lu.controller.common;<br><br><span class="hljs-keyword">import</span> cn.study.lu.service.FileUploadService;<br><span class="hljs-keyword">import</span> cn.study.common.enmu.JsonResponse;<br><br><span class="hljs-keyword">import</span> cn.study.model.dto.lu.CategoryReverseRecursionDto;<br><span class="hljs-keyword">import</span> cn.study.model.entity.mp.Category;<br><span class="hljs-keyword">import</span> io.swagger.annotations.Api;<br><span class="hljs-keyword">import</span> io.swagger.annotations.ApiOperation;<br><span class="hljs-keyword">import</span> org.springframework.beans.factory.annotation.Autowired;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.PostMapping;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.RequestParam;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.RestController;<br><span class="hljs-keyword">import</span> org.springframework.web.multipart.MultipartFile;<br><br><span class="hljs-keyword">import</span> java.util.List;<br><br><span class="hljs-meta">@RestController</span><br><span class="hljs-meta">@RequestMapping(&quot;/admin/common&quot;)</span><br><span class="hljs-meta">@Api(tags = &quot;公共模块&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">CommonController</span> &#123;<br><br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> CommonService commonService;<br><br>    <span class="hljs-meta">@PostMapping(value = &quot;/recursion&quot;)</span><br>    <span class="hljs-meta">@ApiOperation(&quot;递归&quot;)</span><br>    <span class="hljs-keyword">public</span> JsonResponse <span class="hljs-title function_">recursion</span><span class="hljs-params">()</span> &#123;<br>        List&lt;Category&gt; recursion = fileUploadService.recursion();<br>        <span class="hljs-keyword">return</span> JsonResponse.success(recursion) ;<br>    &#125;<br><br><br><br><br>&#125;<br></code></pre></td></tr></table></figure><h5 id="业务层"><a href="#业务层" class="headerlink" title="业务层"></a>业务层</h5><ul><li><h5 id="此处使用了mybatis-plus的代码生成器-直接调用selectList-null-即可"><a href="#此处使用了mybatis-plus的代码生成器-直接调用selectList-null-即可" class="headerlink" title="此处使用了mybatis-plus的代码生成器  直接调用selectList(null)即可"></a>此处使用了mybatis-plus的代码生成器  直接调用selectList(null)即可</h5></li><li><h5 id="实际可根据自己业务自行编写sql语句-下期附上代码生成器文章"><a href="#实际可根据自己业务自行编写sql语句-下期附上代码生成器文章" class="headerlink" title="实际可根据自己业务自行编写sql语句(下期附上代码生成器文章)"></a>实际可根据自己业务自行编写sql语句(下期附上代码生成器文章)</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//接口</span><br><span class="hljs-keyword">package</span> cn.study.lu.service;<br><br><span class="hljs-keyword">import</span> cn.study.model.dto.lu.CategoryReverseRecursionDto;<br><span class="hljs-keyword">import</span> cn.study.model.entity.mp.Category;<br><br><span class="hljs-keyword">import</span> java.util.List;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">CommonService</span> &#123;<br>    List&lt;Category&gt; <span class="hljs-title function_">recursion</span><span class="hljs-params">()</span>;<br>    &#125;<br>    <br>    <br><span class="hljs-comment">//实现</span><br><br><span class="hljs-keyword">package</span> cn.study.lu.service.impl;<br><br><span class="hljs-keyword">import</span> cn.study.lu.mapper.CategoryMapper;<br><span class="hljs-keyword">import</span> cn.study.lu.service.CommonService;<br><span class="hljs-keyword">import</span> cn.study.model.dto.lu.CategoryReverseRecursionDto;<br><span class="hljs-keyword">import</span> cn.study.model.entity.mp.Category;<br><span class="hljs-keyword">import</span> org.springframework.beans.factory.annotation.Autowired;<br><span class="hljs-keyword">import</span> org.springframework.stereotype.Service;<br><br><span class="hljs-keyword">import</span> java.util.List;<br><span class="hljs-keyword">import</span> java.util.Objects;<br><span class="hljs-keyword">import</span> java.util.stream.Collectors;<br><br><span class="hljs-meta">@Service</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">CommonServiceImpl</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">CommonService</span> &#123;<br><br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> CategoryMapper categoryMapper;<br>    <br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> List&lt;Category&gt; <span class="hljs-title function_">recursion</span><span class="hljs-params">()</span> &#123;<br>        List&lt;Category&gt; categoryList = categoryMapper.selectList(<span class="hljs-literal">null</span>);<br>        List&lt;Category&gt; recursionList = categoryList.stream().filter(category -&gt; category.getPid() == <span class="hljs-literal">null</span>).map((category) -&gt; &#123;<br>            category.setChildrenList(getChildren(category, categoryList));<br>            <span class="hljs-keyword">return</span> category;<br>        &#125;).collect(Collectors.toList());<br>        <span class="hljs-keyword">return</span> recursionList;<br>    &#125;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 递归查询子节点</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> root 根节点</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> categoryList  所有节点</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span> 根节点信息</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">private</span> List&lt;Category&gt; <span class="hljs-title function_">getChildren</span><span class="hljs-params">(Category root, List&lt;Category&gt; categoryList)</span> &#123;<br>        List&lt;Category&gt; children = categoryList.stream().filter(category -&gt; &#123;<br>            <span class="hljs-keyword">return</span> Objects.equals(category.getPid(), root.getId());<br>        &#125;).map(<br>                (c) -&gt; &#123;<br>                    c.setChildrenList(getChildren(c, categoryList));<br>                    <span class="hljs-keyword">return</span> c;<br>                &#125;<br>        ).collect(Collectors.toList());<br>        <span class="hljs-keyword">return</span> children;<br>    &#125;<br><br> <br>&#125;<br><br></code></pre></td></tr></table></figure><h5 id="启动项目进行测试-最后结构"><a href="#启动项目进行测试-最后结构" class="headerlink" title="启动项目进行测试   最后结构"></a>启动项目进行测试   最后结构</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br></pre></td><td class="code"><pre><code class="hljs java">&#123;<br>  <span class="hljs-string">&quot;code&quot;</span>: <span class="hljs-number">200</span>,<br>  <span class="hljs-string">&quot;message&quot;</span>: <span class="hljs-string">&quot;操作成功！&quot;</span>,<br>  <span class="hljs-string">&quot;data&quot;</span>: [<br>    &#123;<br>      <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">1</span>,<br>      <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;手机数码&quot;</span>,<br>      <span class="hljs-string">&quot;inventory&quot;</span>: <span class="hljs-string">&quot;5000&quot;</span>,<br>      <span class="hljs-string">&quot;pid&quot;</span>: <span class="hljs-literal">null</span>,<br>      <span class="hljs-string">&quot;childrenList&quot;</span>: [<br>        &#123;<br>          <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">2</span>,<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;小米&quot;</span>,<br>          <span class="hljs-string">&quot;inventory&quot;</span>: <span class="hljs-string">&quot;2000&quot;</span>,<br>          <span class="hljs-string">&quot;pid&quot;</span>: <span class="hljs-number">1</span>,<br>          <span class="hljs-string">&quot;childrenList&quot;</span>: []<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">3</span>,<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;华为&quot;</span>,<br>          <span class="hljs-string">&quot;inventory&quot;</span>: <span class="hljs-string">&quot;2000&quot;</span>,<br>          <span class="hljs-string">&quot;pid&quot;</span>: <span class="hljs-number">1</span>,<br>          <span class="hljs-string">&quot;childrenList&quot;</span>: []<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">4</span>,<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;努比亚&quot;</span>,<br>          <span class="hljs-string">&quot;inventory&quot;</span>: <span class="hljs-string">&quot;1000&quot;</span>,<br>          <span class="hljs-string">&quot;pid&quot;</span>: <span class="hljs-number">1</span>,<br>          <span class="hljs-string">&quot;childrenList&quot;</span>: []<br>        &#125;<br>      ]<br>    &#125;,<br>    &#123;<br>      <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">5</span>,<br>      <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;休闲零食&quot;</span>,<br>      <span class="hljs-string">&quot;inventory&quot;</span>: <span class="hljs-string">&quot;8000&quot;</span>,<br>      <span class="hljs-string">&quot;pid&quot;</span>: <span class="hljs-literal">null</span>,<br>      <span class="hljs-string">&quot;childrenList&quot;</span>: [<br>        &#123;<br>          <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">6</span>,<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;薯片&quot;</span>,<br>          <span class="hljs-string">&quot;inventory&quot;</span>: <span class="hljs-string">&quot;1000&quot;</span>,<br>          <span class="hljs-string">&quot;pid&quot;</span>: <span class="hljs-number">5</span>,<br>          <span class="hljs-string">&quot;childrenList&quot;</span>: []<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">7</span>,<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;糖果&quot;</span>,<br>          <span class="hljs-string">&quot;inventory&quot;</span>: <span class="hljs-string">&quot;3000&quot;</span>,<br>          <span class="hljs-string">&quot;pid&quot;</span>: <span class="hljs-number">5</span>,<br>          <span class="hljs-string">&quot;childrenList&quot;</span>: []<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">8</span>,<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;果干&quot;</span>,<br>          <span class="hljs-string">&quot;inventory&quot;</span>: <span class="hljs-string">&quot;1000&quot;</span>,<br>          <span class="hljs-string">&quot;pid&quot;</span>: <span class="hljs-number">5</span>,<br>          <span class="hljs-string">&quot;childrenList&quot;</span>: []<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">9</span>,<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;辣条&quot;</span>,<br>          <span class="hljs-string">&quot;inventory&quot;</span>: <span class="hljs-string">&quot;2000&quot;</span>,<br>          <span class="hljs-string">&quot;pid&quot;</span>: <span class="hljs-number">5</span>,<br>          <span class="hljs-string">&quot;childrenList&quot;</span>: []<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">10</span>,<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;花生&quot;</span>,<br>          <span class="hljs-string">&quot;inventory&quot;</span>: <span class="hljs-string">&quot;1000&quot;</span>,<br>          <span class="hljs-string">&quot;pid&quot;</span>: <span class="hljs-number">5</span>,<br>          <span class="hljs-string">&quot;childrenList&quot;</span>: []<br>        &#125;<br>      ]<br>    &#125;,<br>    &#123;<br>      <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">11</span>,<br>      <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;酒水饮料&quot;</span>,<br>      <span class="hljs-string">&quot;inventory&quot;</span>: <span class="hljs-string">&quot;10000&quot;</span>,<br>      <span class="hljs-string">&quot;pid&quot;</span>: <span class="hljs-literal">null</span>,<br>      <span class="hljs-string">&quot;childrenList&quot;</span>: [<br>        &#123;<br>          <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">12</span>,<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;白酒&quot;</span>,<br>          <span class="hljs-string">&quot;inventory&quot;</span>: <span class="hljs-string">&quot;4000&quot;</span>,<br>          <span class="hljs-string">&quot;pid&quot;</span>: <span class="hljs-number">11</span>,<br>          <span class="hljs-string">&quot;childrenList&quot;</span>: [<br>            &#123;<br>              <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">15</span>,<br>              <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;口子窖&quot;</span>,<br>              <span class="hljs-string">&quot;inventory&quot;</span>: <span class="hljs-string">&quot;300&quot;</span>,<br>              <span class="hljs-string">&quot;pid&quot;</span>: <span class="hljs-number">12</span>,<br>              <span class="hljs-string">&quot;childrenList&quot;</span>: []<br>            &#125;,<br>            &#123;<br>              <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">16</span>,<br>              <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;茅台&quot;</span>,<br>              <span class="hljs-string">&quot;inventory&quot;</span>: <span class="hljs-string">&quot;1000&quot;</span>,<br>              <span class="hljs-string">&quot;pid&quot;</span>: <span class="hljs-number">12</span>,<br>              <span class="hljs-string">&quot;childrenList&quot;</span>: []<br>            &#125;,<br>            &#123;<br>              <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">17</span>,<br>              <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;古井贡酒&quot;</span>,<br>              <span class="hljs-string">&quot;inventory&quot;</span>: <span class="hljs-string">&quot;2000&quot;</span>,<br>              <span class="hljs-string">&quot;pid&quot;</span>: <span class="hljs-number">12</span>,<br>              <span class="hljs-string">&quot;childrenList&quot;</span>: []<br>            &#125;,<br>            &#123;<br>              <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">18</span>,<br>              <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;稻花香&quot;</span>,<br>              <span class="hljs-string">&quot;inventory&quot;</span>: <span class="hljs-string">&quot;700&quot;</span>,<br>              <span class="hljs-string">&quot;pid&quot;</span>: <span class="hljs-number">12</span>,<br>              <span class="hljs-string">&quot;childrenList&quot;</span>: []<br>            &#125;<br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">13</span>,<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;啤酒&quot;</span>,<br>          <span class="hljs-string">&quot;inventory&quot;</span>: <span class="hljs-string">&quot;3000&quot;</span>,<br>          <span class="hljs-string">&quot;pid&quot;</span>: <span class="hljs-number">11</span>,<br>          <span class="hljs-string">&quot;childrenList&quot;</span>: [<br>            &#123;<br>              <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">19</span>,<br>              <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;青岛啤酒&quot;</span>,<br>              <span class="hljs-string">&quot;inventory&quot;</span>: <span class="hljs-string">&quot;1000&quot;</span>,<br>              <span class="hljs-string">&quot;pid&quot;</span>: <span class="hljs-number">13</span>,<br>              <span class="hljs-string">&quot;childrenList&quot;</span>: []<br>            &#125;,<br>            &#123;<br>              <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">20</span>,<br>              <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;燕京啤酒&quot;</span>,<br>              <span class="hljs-string">&quot;inventory&quot;</span>: <span class="hljs-string">&quot;1500&quot;</span>,<br>              <span class="hljs-string">&quot;pid&quot;</span>: <span class="hljs-number">13</span>,<br>              <span class="hljs-string">&quot;childrenList&quot;</span>: []<br>            &#125;,<br>            &#123;<br>              <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">21</span>,<br>              <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;黑啤&quot;</span>,<br>              <span class="hljs-string">&quot;inventory&quot;</span>: <span class="hljs-string">&quot;500&quot;</span>,<br>              <span class="hljs-string">&quot;pid&quot;</span>: <span class="hljs-number">13</span>,<br>              <span class="hljs-string">&quot;childrenList&quot;</span>: []<br>            &#125;<br>          ]<br>        &#125;,<br>        &#123;<br>          <span class="hljs-string">&quot;id&quot;</span>: <span class="hljs-number">14</span>,<br>          <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;红酒&quot;</span>,<br>          <span class="hljs-string">&quot;inventory&quot;</span>: <span class="hljs-string">&quot;3000&quot;</span>,<br>          <span class="hljs-string">&quot;pid&quot;</span>: <span class="hljs-number">11</span>,<br>          <span class="hljs-string">&quot;childrenList&quot;</span>: []<br>        &#125;<br>      ]<br>    &#125;<br>  ]<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>递归</tag>
      
      <tag>Java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>listary工具</title>
    <link href="/posts/53714.html"/>
    <url>/posts/53714.html</url>
    
    <content type="html"><![CDATA[<h3 id="工具介绍"><a href="#工具介绍" class="headerlink" title="工具介绍"></a>工具介绍</h3><p>Listary是一款实用的搜索工具。它能给“我的电脑“（资源管理器）加上许多智能命令，含有收藏文件夹，快速打开最近浏览的文件夹，快速显示&#x2F;隐藏文件扩展名等等实用功能。能大大提高用户日常收藏和整理文件的效率。</p><h3 id="下载地址-https-www-listary-com"><a href="#下载地址-https-www-listary-com" class="headerlink" title="下载地址: https://www.listary.com/"></a>下载地址: <a href="https://www.listary.com/">https://www.listary.com/</a></h3><p><img src="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311161709114.png" srcset="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311201535395.gif" lazyload></p><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><ul><li>双击两个Ctrl键就会出来搜索框</li></ul><p><img src="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311161711624.png" srcset="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311201535395.gif" lazyload></p><ul><li>此外这个工具还能对系统不能修改的文件进行修改 咱不演示</li></ul>]]></content>
    
    
    <categories>
      
      <category>实用工具</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工具</tag>
      
      <tag>搜索</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>hexo+PicGo+阿里云构成图床</title>
    <link href="/posts/52812.html"/>
    <url>/posts/52812.html</url>
    
    <content type="html"><![CDATA[<h3 id="Picgo图床"><a href="#Picgo图床" class="headerlink" title="Picgo图床"></a>Picgo图床</h3><p>PicGo是一款比较优秀的图床工具。它是一款用 Electron-vue 开发的软件，可以支持微博，七牛云，腾讯云COS，又拍云，GitHub，阿里云OSS，SM.MS，imgur 等8种常用图床，功能强大，简单易用</p><p>一般如果不使用图床，你的图片会存放在_post的文章文件夹内，这对于博客迁移来说是非常不方便的，所以依旧是借助github的托管来做一个图床</p><p>Picgo下载:<a href="https://github.com/Molunerfinn/PicGo/releases">https://github.com/Molunerfinn/PicGo/releases</a><br><img src="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311161609584.png" srcset="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311201535395.gif" lazyload></p><p>进行下载安装一路打√即可</p><h3 id="阿里云对象储能OSS"><a href="#阿里云对象储能OSS" class="headerlink" title="阿里云对象储能OSS"></a>阿里云对象储能OSS</h3><ul><li>进入阿里云点击右上角控制台进入工作台</li><li>搜索对象储能OSS  首次使用免费使用三个月 后续使用自己续费即可</li><li>购买完成以后进入对象储存OSS页面  点击Bucket 列表并创建</li></ul><p><img src="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311161619057.png" srcset="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311201535395.gif" lazyload></p><ul><li>按照我给的图进行配置并完成创建</li></ul><p><img src="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311161614333.png" srcset="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311201535395.gif" lazyload></p><ul><li>创建完成以后点击右上角头像  在点击AccessKey管理进入页面</li></ul><p><img src="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311161625298.png" srcset="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311201535395.gif" lazyload></p><ul><li>若没有自己创建一下即可   创建完成时会生成id和keySecret  切记一定要保存下来(后面会用)</li></ul><h3 id="进行图床的配置"><a href="#进行图床的配置" class="headerlink" title="进行图床的配置"></a>进行图床的配置</h3><ul><li>打开PicGo软件</li></ul><p><img src="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311161631540.png" srcset="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311201535395.gif" lazyload></p><ul><li>特别注意存储区域 若注册是北京 则对应是:oss-cn-beijing</li></ul><p><img src="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311161631525.png" srcset="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311201535395.gif" lazyload></p><ul><li>完成以上配置便可以测试一下能否使用  点击上传测试</li></ul><p><img src="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311161634365.png" srcset="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311201535395.gif" lazyload></p><ul><li>当点击上传后能提示上传成功或在相册能够查看即可</li></ul><p><img src="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311161634783.png" srcset="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311201535395.gif" lazyload></p><ul><li>最后就是typora的设置</li></ul><p><img src="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311161639297.png" srcset="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311201535395.gif" lazyload></p><ul><li>后续上传图片</li></ul><p><img src="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311161640971.png" srcset="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311201535395.gif" lazyload></p><ul><li>点击包的图片上传本地文件就会自动推到OSS的仓库中</li></ul><p><img src="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311161642943.png" srcset="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311201535395.gif" lazyload></p><ul><li><p>进入到OSS的仓库中进入xxx&#x2F;bolg中查看</p><p><img src="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311161643588.png" srcset="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311201535395.gif" lazyload></p></li></ul><h3 id="大概步骤如上-如有其他不明白的地方私信即可"><a href="#大概步骤如上-如有其他不明白的地方私信即可" class="headerlink" title="大概步骤如上 如有其他不明白的地方私信即可"></a>大概步骤如上 如有其他不明白的地方私信即可</h3>]]></content>
    
    
    <categories>
      
      <category>hexo配置</category>
      
    </categories>
    
    
    <tags>
      
      <tag>配置</tag>
      
      <tag>阿里云</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Windows安装minio</title>
    <link href="/posts/18206.html"/>
    <url>/posts/18206.html</url>
    
    <content type="html"><![CDATA[<h3 id="推荐给不想花钱把图片储存在阿里云的小伙伴-介绍一下Minio"><a href="#推荐给不想花钱把图片储存在阿里云的小伙伴-介绍一下Minio" class="headerlink" title="推荐给不想花钱把图片储存在阿里云的小伙伴  介绍一下Minio"></a>推荐给不想花钱把图片储存在阿里云的小伙伴  介绍一下Minio</h3><ul><li>官网下载地址: <a href="https://links.jianshu.com/go?to=https://dl.minio.io/server/minio/release/windows-amd64/minio.exe">https://dl.minio.io/server/minio/release/windows-amd64/minio.exe</a></li><li>推荐创建一个英文路径的文件夹把minio软件放在文件夹中</li></ul><p>​       在根目录输入cmd进入窗口输入minio.exe server +所在盘符路径</p><p><img src="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311161523481.png" srcset="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311201535395.gif" lazyload></p><ul><li>在浏览器输入当前访问地址 账号密码默认minioadmin</li><li>但当前配置会出现每次使用minio都需要使用命令启动相对麻烦</li><li>所以推荐一种配置到电脑服务中进行自启</li></ul><ol><li>下载winsw，下载地址：<a href="https://github.com/winsw/winsw/releases">Releases · winsw&#x2F;winsw · GitHub</a></li></ol><p>待完成!!!</p><h3 id="springboot整合minio"><a href="#springboot整合minio" class="headerlink" title="springboot整合minio"></a>springboot整合minio</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>io.minio<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>minio<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>7.1.0<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><ul><li><p>在yml文件中配置minio</p> <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">minio:</span><br>  <span class="hljs-attr">accessKey:</span> <span class="hljs-string">minioadmin</span><br>  <span class="hljs-attr">secretKey:</span> <span class="hljs-string">minioadmin</span><br>  <span class="hljs-attr">bucket:</span> <span class="hljs-string">study-product</span><br>  <span class="hljs-attr">endpoint:</span> <span class="hljs-string">http://localhost:9000</span><br></code></pre></td></tr></table></figure></li><li><p>创建对应调用的实体类  需注意的是读取节点需根据自己项目调整 </p></li><li><p>若在Spring下 则prefix&#x3D;”spring.minio”</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> cn.study.lu.controller.properties;<br><br><span class="hljs-keyword">import</span> lombok.Data;<br><span class="hljs-keyword">import</span> org.springframework.boot.context.properties.ConfigurationProperties;<br><span class="hljs-keyword">import</span> org.springframework.stereotype.Component;<br><br><span class="hljs-meta">@Data</span><br><span class="hljs-meta">@ConfigurationProperties(prefix=&quot;minio&quot;)</span> <span class="hljs-comment">//读取节点</span><br><span class="hljs-meta">@Component</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MinioProperties</span> &#123;<br><br>    <span class="hljs-keyword">private</span> String endpoint;<br>    <span class="hljs-keyword">private</span> String accessKey;<br>    <span class="hljs-keyword">private</span> String secretKey;<br>    <span class="hljs-keyword">private</span> String bucket;<br><br>&#125;<br></code></pre></td></tr></table></figure><ul><li>创建对应的controller 建议放在common模块下</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> cn.study.lu.controller.common;<br><br><span class="hljs-keyword">import</span> cn.study.lu.service.FileUploadService;<br><span class="hljs-keyword">import</span> cn.study.common.enmu.JsonResponse;<br><br><span class="hljs-keyword">import</span> cn.study.model.dto.lu.CategoryReverseRecursionDto;<br><span class="hljs-keyword">import</span> cn.study.model.entity.mp.Category;<br><span class="hljs-keyword">import</span> io.swagger.annotations.Api;<br><span class="hljs-keyword">import</span> io.swagger.annotations.ApiOperation;<br><span class="hljs-keyword">import</span> org.springframework.beans.factory.annotation.Autowired;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.PostMapping;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.RequestParam;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.RestController;<br><span class="hljs-keyword">import</span> org.springframework.web.multipart.MultipartFile;<br><br><span class="hljs-keyword">import</span> java.util.List;<br><br><span class="hljs-meta">@RestController</span><br><span class="hljs-meta">@RequestMapping(&quot;/admin/common&quot;)</span><br><span class="hljs-meta">@Api(tags = &quot;公共模块&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">CommonController</span> &#123;<br><br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> FileUploadService fileUploadService ;<br><br>    <span class="hljs-meta">@PostMapping(value = &quot;/upload&quot;)</span><br>    <span class="hljs-meta">@ApiOperation(&quot;图片上传minio&quot;)</span><br>    <span class="hljs-keyword">public</span> JsonResponse&lt;String&gt; <span class="hljs-title function_">fileUploadService</span><span class="hljs-params">(<span class="hljs-meta">@RequestParam(value = &quot;file&quot;)</span> MultipartFile multipartFile)</span> &#123;<br>        <span class="hljs-type">String</span> <span class="hljs-variable">fileUrl</span> <span class="hljs-operator">=</span> fileUploadService.fileUpload(multipartFile) ;<br>        <span class="hljs-keyword">return</span> JsonResponse.success(fileUrl) ;<br>    &#125;<br></code></pre></td></tr></table></figure><ul><li>创建对应的service和serviceimpl   注意创建的实体类需要注入业务层</li><li>提醒:在图片上传成功我把图片添加到了数据库  自己使用时可删除</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> cn.study.lu.service;<br><br><span class="hljs-keyword">import</span> cn.study.model.dto.lu.CategoryReverseRecursionDto;<br><span class="hljs-keyword">import</span> cn.study.model.entity.mp.Category;<br><span class="hljs-keyword">import</span> org.springframework.web.multipart.MultipartFile;<br><br><span class="hljs-keyword">import</span> java.util.List;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">FileUploadService</span> &#123;<br>    String <span class="hljs-title function_">fileUpload</span><span class="hljs-params">(MultipartFile multipartFile)</span>;<br>&#125;<br><br><br><span class="hljs-comment">//业务层</span><br><span class="hljs-keyword">package</span> cn.study.lu.service.impl;<br><br><br><span class="hljs-keyword">import</span> cn.hutool.core.date.DateUtil;<br><br><span class="hljs-keyword">import</span> cn.study.lu.controller.properties.MinioProperties;<br><span class="hljs-keyword">import</span> cn.study.lu.mapper.CategoryMapper;<br><span class="hljs-keyword">import</span> cn.study.lu.mapper.PictureMapper;<br><span class="hljs-keyword">import</span> cn.study.lu.service.FileUploadService;<br><span class="hljs-keyword">import</span> cn.study.model.dto.lu.CategoryReverseRecursionDto;<br><span class="hljs-keyword">import</span> cn.study.model.entity.mp.Category;<br><span class="hljs-keyword">import</span> cn.study.model.entity.lu.Picture;<br><span class="hljs-keyword">import</span> cn.study.utils.DateUtils;<br><span class="hljs-keyword">import</span> io.minio.BucketExistsArgs;<br><span class="hljs-keyword">import</span> io.minio.MakeBucketArgs;<br><span class="hljs-keyword">import</span> io.minio.MinioClient;<br><span class="hljs-keyword">import</span> io.minio.PutObjectArgs;<br><span class="hljs-keyword">import</span> org.springframework.beans.factory.annotation.Autowired;<br><span class="hljs-keyword">import</span> org.springframework.stereotype.Service;<br><span class="hljs-keyword">import</span> org.springframework.web.multipart.MultipartFile;<br><br><span class="hljs-keyword">import</span> java.util.Date;<br><span class="hljs-keyword">import</span> java.util.List;<br><span class="hljs-keyword">import</span> java.util.Objects;<br><span class="hljs-keyword">import</span> java.util.UUID;<br><span class="hljs-keyword">import</span> java.util.stream.Collectors;<br><br><br><span class="hljs-meta">@Service</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">FileUploadServiceImpl</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">FileUploadService</span> &#123;<br><br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> MinioProperties minioProperties ;<br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> PictureMapper pictureMapper;<br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> CategoryMapper categoryMapper;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">fileUpload</span><span class="hljs-params">(MultipartFile multipartFile)</span> &#123;<br><br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-comment">// 创建一个Minio的客户端对象</span><br>            <span class="hljs-type">MinioClient</span> <span class="hljs-variable">minioClient</span> <span class="hljs-operator">=</span> MinioClient.builder()<br>                    .endpoint(minioProperties.getEndpoint())<br>                    .credentials(minioProperties.getAccessKey(), minioProperties.getSecretKey())<br>                    .build();<br><br>            <span class="hljs-comment">// 判断桶是否存在</span><br>            <span class="hljs-type">boolean</span> <span class="hljs-variable">found</span> <span class="hljs-operator">=</span> minioClient.bucketExists(BucketExistsArgs.builder().bucket(minioProperties.getBucket()).build());<br>            <span class="hljs-keyword">if</span> (!found) &#123;       <span class="hljs-comment">// 如果不存在，那么此时就创建一个新的桶</span><br>                minioClient.makeBucket(MakeBucketArgs.builder().bucket(minioProperties.getBucket()).build());<br>            &#125; <span class="hljs-keyword">else</span> &#123;  <span class="hljs-comment">// 如果存在打印信息</span><br>                System.out.println(<span class="hljs-string">&quot;Bucket  already exists.&quot;</span>);<br>            &#125;<br><br>            <span class="hljs-comment">// 设置存储对象名称</span><br>            <span class="hljs-type">String</span> <span class="hljs-variable">dateDir</span> <span class="hljs-operator">=</span> DateUtil.format(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(), <span class="hljs-string">&quot;yyyyMMdd&quot;</span>);<br>            <span class="hljs-type">String</span> <span class="hljs-variable">uuid</span> <span class="hljs-operator">=</span> UUID.randomUUID().toString().replace(<span class="hljs-string">&quot;-&quot;</span>, <span class="hljs-string">&quot;&quot;</span>);<br>            <span class="hljs-comment">//20230801/443e1e772bef482c95be28704bec58a901.jpg</span><br>            <span class="hljs-type">String</span> <span class="hljs-variable">fileName</span> <span class="hljs-operator">=</span> dateDir+<span class="hljs-string">&quot;/&quot;</span>+uuid+multipartFile.getOriginalFilename();<br>            System.out.println(fileName);<br><br>            <span class="hljs-type">PutObjectArgs</span> <span class="hljs-variable">putObjectArgs</span> <span class="hljs-operator">=</span> PutObjectArgs.builder()<br>                    .bucket(minioProperties.getBucket())<br>                    .stream(multipartFile.getInputStream(), multipartFile.getSize(), -<span class="hljs-number">1</span>)<br>                    .object(fileName)<br>                    .build();<br>            minioClient.putObject(putObjectArgs) ;<br><br><br>            <span class="hljs-type">String</span> <span class="hljs-variable">path</span> <span class="hljs-operator">=</span> minioProperties.getEndpoint() + <span class="hljs-string">&quot;/&quot;</span> + minioProperties.getBucket() + <span class="hljs-string">&quot;/&quot;</span> + fileName;<br><br>            <span class="hljs-type">Picture</span> <span class="hljs-variable">picture</span> <span class="hljs-operator">=</span> Picture.builder()<br>                    .id(UUID.randomUUID().toString())<br>                    .url(path)<br>                    .createTime(DateUtils.getNowDate())<br>                    .updateTime(DateUtils.getNowDate()).build();<br>            pictureMapper.insert(picture);<br><br>            <span class="hljs-keyword">return</span>  path;<br><br><br>        &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">RuntimeException</span>(e);<br>        &#125;<br>    &#125;<br><br></code></pre></td></tr></table></figure><ul><li>启动项目在apifox进行测试</li></ul><p><img src="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311161552507.png" srcset="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311201535395.gif" lazyload></p><p><img src="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311161552962.png" srcset="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311201535395.gif" lazyload></p><ul><li>最后测试成功</li></ul>]]></content>
    
    
    <categories>
      
      <category>配置</category>
      
    </categories>
    
    
    <tags>
      
      <tag>配置</tag>
      
      <tag>minio</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/posts/16107.html"/>
    <url>/posts/16107.html</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>hexo配置自定义域名</title>
    <link href="/posts/22910.html"/>
    <url>/posts/22910.html</url>
    
    <content type="html"><![CDATA[<h2 id="本文主要介绍搭建个人博客时如何使用已购买的域名访问"><a href="#本文主要介绍搭建个人博客时如何使用已购买的域名访问" class="headerlink" title="本文主要介绍搭建个人博客时如何使用已购买的域名访问"></a>本文主要介绍搭建个人博客时如何使用已购买的域名访问</h2><h3 id="首先要有自己的hexo博客并且已经成功部署且能访问"><a href="#首先要有自己的hexo博客并且已经成功部署且能访问" class="headerlink" title="首先要有自己的hexo博客并且已经成功部署且能访问"></a>首先要有自己的hexo博客并且已经成功部署且能访问</h3><p>​    <img src="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311151450423.png" srcset="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311201535395.gif" lazyload></p><h5 id="访问链接-https-xhxr-xyz"><a href="#访问链接-https-xhxr-xyz" class="headerlink" title="访问链接:https://xhxr.xyz/"></a>访问链接:<a href="https://xhxr.xyz/">https://xhxr.xyz/</a></h5><h2 id="其次需要在阿里云或腾讯云以及其他平台注册或购买域名"><a href="#其次需要在阿里云或腾讯云以及其他平台注册或购买域名" class="headerlink" title="其次需要在阿里云或腾讯云以及其他平台注册或购买域名"></a>其次需要在阿里云或腾讯云以及其他平台注册或购买域名</h2><ul><li><p>如何购买域名自行搜索</p></li><li><p>搜索阿里云找到工作台搜索域名</p><p><img src="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311151454905.png" srcset="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311201535395.gif" lazyload></p></li><li><h3 id="点击域名列表并点击解析"><a href="#点击域名列表并点击解析" class="headerlink" title="点击域名列表并点击解析"></a>点击域名列表并点击解析</h3><p><img src="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311151500918.png" srcset="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311201535395.gif" lazyload></p></li><li><h3 id="进入解析页面点击添加记录"><a href="#进入解析页面点击添加记录" class="headerlink" title="进入解析页面点击添加记录"></a>进入解析页面点击添加记录</h3></li></ul><p><img src="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311151506795.png" srcset="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311201535395.gif" lazyload></p><p><img src="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311151507316.png" srcset="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311201535395.gif" lazyload></p><ul><li><h3 id="最后进入github-com找到博客仓库的Settings的Pages"><a href="#最后进入github-com找到博客仓库的Settings的Pages" class="headerlink" title="最后进入github.com找到博客仓库的Settings的Pages"></a>最后进入github.com找到博客仓库的Settings的Pages</h3></li></ul><p><img src="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311151510783.png" srcset="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311201535395.gif" lazyload></p><ul><li><h5 id="注意当配置后并进行二次发布测试时就会出现配置的域名无法访问的情况-第一次不会"><a href="#注意当配置后并进行二次发布测试时就会出现配置的域名无法访问的情况-第一次不会" class="headerlink" title="注意当配置后并进行二次发布测试时就会出现配置的域名无法访问的情况(第一次不会)"></a>注意当配置后并进行二次发布测试时就会出现配置的域名无法访问的情况(第一次不会)</h5></li><li><h5 id="所以我们采取一次配置永久使用的方法"><a href="#所以我们采取一次配置永久使用的方法" class="headerlink" title="所以我们采取一次配置永久使用的方法"></a>所以我们采取一次配置永久使用的方法</h5></li><li><h5 id="在博客目录下的source文件下创建CNAME文件-注意文件不带任何后缀"><a href="#在博客目录下的source文件下创建CNAME文件-注意文件不带任何后缀" class="headerlink" title="在博客目录下的source文件下创建CNAME文件 注意文件不带任何后缀"></a>在博客目录下的source文件下创建CNAME文件 注意文件不带任何后缀</h5></li></ul><p><img src="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311151715342.png" srcset="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311201535395.gif" lazyload></p><ul><li><h5 id="在CNAME文件中配置上自己的域名即可-其他无需配置"><a href="#在CNAME文件中配置上自己的域名即可-其他无需配置" class="headerlink" title="在CNAME文件中配置上自己的域名即可  其他无需配置"></a>在CNAME文件中配置上自己的域名即可  其他无需配置</h5></li><li><h5 id="再次重新清空生成发布访问即可-建议多次进行小改动并发布测试域名访问能否成功"><a href="#再次重新清空生成发布访问即可-建议多次进行小改动并发布测试域名访问能否成功" class="headerlink" title="再次重新清空生成发布访问即可 建议多次进行小改动并发布测试域名访问能否成功"></a>再次重新清空生成发布访问即可 建议多次进行小改动并发布测试域名访问能否成功</h5></li></ul><h2 id="最后祝大家配置顺利"><a href="#最后祝大家配置顺利" class="headerlink" title="最后祝大家配置顺利"></a>最后祝大家配置顺利</h2>]]></content>
    
    
    <categories>
      
      <category>hexo配置</category>
      
    </categories>
    
    
    <tags>
      
      <tag>配置</tag>
      
      <tag>阿里云</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>测试视频</title>
    <link href="/posts/16888.html"/>
    <url>/posts/16888.html</url>
    
    <content type="html"><![CDATA[<div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe src="//player.bilibili.com/player.html?aid=920116117&bvid=BV1ru4y1n7sm&cid=1310531125&p=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; Left: 0; top: 0;"> </iframe></div>]]></content>
    
    
    <categories>
      
      <category>视频</category>
      
    </categories>
    
    
    <tags>
      
      <tag>B站</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Convert转换时间所避的坑</title>
    <link href="/posts/58565.html"/>
    <url>/posts/58565.html</url>
    
    <content type="html"><![CDATA[<h5 id="hutool工具类依赖"><a href="#hutool工具类依赖" class="headerlink" title="hutool工具类依赖"></a>hutool工具类依赖</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">&lt;dependency&gt;<br>           &lt;groupId&gt;cn.hutool&lt;/groupId&gt;<br>           &lt;artifactId&gt;hutool-all&lt;/artifactId&gt;<br>           &lt;version&gt;5.5.2&lt;/version&gt;<br>       &lt;/dependency&gt;<br></code></pre></td></tr></table></figure><h5 id="由图可见hutool工具类自带时间转换器时-需要转换的对象小于转换格式时就会为空"><a href="#由图可见hutool工具类自带时间转换器时-需要转换的对象小于转换格式时就会为空" class="headerlink" title="由图可见hutool工具类自带时间转换器时 需要转换的对象小于转换格式时就会为空"></a>由图可见hutool工具类自带时间转换器时 需要转换的对象小于转换格式时就会为空</h5><p><img src="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20231110145406.png" srcset="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311201535395.gif" lazyload></p><p><img src="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20231110145414.png" srcset="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311201535395.gif" lazyload></p><h5 id="正确实例如下"><a href="#正确实例如下" class="headerlink" title="正确实例如下"></a>正确实例如下</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">String <span class="hljs-built_in">test</span>=<span class="hljs-string">&quot;2013-10-10 15:35:45&quot;</span>;<br>        LocalDateTime dateTime = Convert.toLocalDateTime(<span class="hljs-built_in">test</span>);<br>        System.out.println(dateTime);//2013-10-10T15:35:45<br>        String format1 = DateUtil.format(dateTime, <span class="hljs-string">&quot;HH:mm&quot;</span>);<br>        System.out.println(format1);//15:35<br>        String format2 = DateUtil.format(dateTime, <span class="hljs-string">&quot;yyyy-MM&quot;</span>);<br>        System.out.println(format2);//2013-10<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>时间工具类</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>定时任务</title>
    <link href="/posts/21635.html"/>
    <url>/posts/21635.html</url>
    
    <content type="html"><![CDATA[<h5 id="先创建一个类用于完成定时任务的代码编写的抽象方法"><a href="#先创建一个类用于完成定时任务的代码编写的抽象方法" class="headerlink" title="先创建一个类用于完成定时任务的代码编写的抽象方法"></a>先创建一个类用于完成定时任务的代码编写的抽象方法</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.qyny.common.config.quarz.handle;<br><br><span class="hljs-keyword">import</span> java.math.BigDecimal;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 任务处理方法的接口类</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">JobHandler</span> &#123;<br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">handle</span><span class="hljs-params">()</span>;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 生成两个整数之间的随机小数</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> min   最小值</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> max   最大值</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> num   保留小数点位数</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">default</span> BigDecimal <span class="hljs-title function_">generateRandomDouble</span><span class="hljs-params">(<span class="hljs-type">int</span> min, <span class="hljs-type">int</span> max, <span class="hljs-type">int</span> num)</span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">BigDecimal</span>(min+Math.random()*(max-min)).setScale(num,BigDecimal.ROUND_HALF_UP);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h5 id="再定义一个类去实现抽象类完成定时任务的编写"><a href="#再定义一个类去实现抽象类完成定时任务的编写" class="headerlink" title="再定义一个类去实现抽象类完成定时任务的编写"></a>再定义一个类去实现抽象类完成定时任务的编写</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.qyny.common.config.quarz.job.genAlarm;<br><br><span class="hljs-keyword">import</span> com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;<br><span class="hljs-keyword">import</span> com.qyny.common.config.quarz.handle.JobHandler;<br><span class="hljs-keyword">import</span> com.qyny.common.constant.LocalDateConstant;<br><span class="hljs-keyword">import</span> com.qyny.common.utils.LocalDateUtils;<br><span class="hljs-keyword">import</span> com.qyny.equipmentManagement.dao.DeviceInfoMapper;<br><span class="hljs-keyword">import</span> com.qyny.equipmentManagement.entity.DeviceInfo;<br><span class="hljs-keyword">import</span> com.qyny.equipmentMonitoring.dao.TAlarmDataMapper;<br><span class="hljs-keyword">import</span> com.qyny.equipmentMonitoring.dao.TAlarmParamInfoMapper;<br><span class="hljs-keyword">import</span> com.qyny.equipmentMonitoring.entity.TAlarmDataEntity;<br><span class="hljs-keyword">import</span> com.qyny.equipmentMonitoring.entity.TAlarmParamInfoEntity;<br><span class="hljs-keyword">import</span> lombok.extern.slf4j.Slf4j;<br><span class="hljs-keyword">import</span> org.springframework.beans.factory.annotation.Autowired;<br><span class="hljs-keyword">import</span> org.springframework.stereotype.Component;<br><span class="hljs-keyword">import</span> org.springframework.transaction.annotation.Transactional;<br><br><span class="hljs-keyword">import</span> java.time.LocalDateTime;<br><span class="hljs-keyword">import</span> java.util.List;<br><span class="hljs-keyword">import</span> java.util.Random;<br><br><span class="hljs-meta">@Component</span><br><span class="hljs-meta">@Slf4j</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">GenerateAlarmHandler</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">JobHandler</span> &#123;<br><br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> TAlarmParamInfoMapper tAlarmParamInfoMapper;<br><br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> TAlarmDataMapper alarmDataMapper;<br><br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> DeviceInfoMapper deviceInfoMapper;<br><br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-meta">@Transactional(rollbackFor = Exception.class)</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">handle</span><span class="hljs-params">()</span> &#123;<br>        log.debug(<span class="hljs-string">&quot;定时报警start&quot;</span>);<br><br>        <span class="hljs-comment">//报警参数列表</span><br>        QueryWrapper&lt;TAlarmParamInfoEntity&gt; tAlarmParamInfoMapperQueryWrapper = <span class="hljs-keyword">new</span> <span class="hljs-title class_">QueryWrapper</span>&lt;&gt;();<br>        tAlarmParamInfoMapperQueryWrapper.lambda().eq(TAlarmParamInfoEntity::getIsEnabled,<span class="hljs-number">1</span>);<br>        tAlarmParamInfoMapperQueryWrapper.lambda().eq(TAlarmParamInfoEntity::getIsDeleted,<span class="hljs-number">0</span>);<br>        List&lt;TAlarmParamInfoEntity&gt; alarmParamInfoEntityList = tAlarmParamInfoMapper.selectList(tAlarmParamInfoMapperQueryWrapper);<br><br><br>        <span class="hljs-comment">//设备列表</span><br>        QueryWrapper&lt;DeviceInfo&gt; deviceInfoQueryWrapper = <span class="hljs-keyword">new</span> <span class="hljs-title class_">QueryWrapper</span>&lt;&gt;();<br>        deviceInfoQueryWrapper.lambda().eq(DeviceInfo::getIsDeleted,<span class="hljs-number">0</span>);<br>        deviceInfoQueryWrapper.lambda().eq(DeviceInfo::getIsEnabled,<span class="hljs-number">1</span>);<br>        List&lt;DeviceInfo&gt; deviceInfoList = deviceInfoMapper.selectList(deviceInfoQueryWrapper);<br><br>        LocalDateTime currentTime= LocalDateUtils.getCurrentTime();<br><br>        <span class="hljs-comment">//查询是否生成过</span><br>        QueryWrapper&lt;TAlarmDataEntity&gt; alarmDataEntityQueryWrapper = <span class="hljs-keyword">new</span> <span class="hljs-title class_">QueryWrapper</span>&lt;&gt;();<br>        alarmDataEntityQueryWrapper.lambda().eq(TAlarmDataEntity::getIsDeleted,<span class="hljs-number">0</span>);<br>        alarmDataEntityQueryWrapper.lambda().like(TAlarmDataEntity::getCreateTime,currentTime.format(LocalDateConstant.DEFAULT_DATE_HOUR_FORMAT));<br>        List&lt;TAlarmDataEntity&gt; tAlarmDataEntityList = alarmDataMapper.selectList(alarmDataEntityQueryWrapper);<br><br>        <span class="hljs-keyword">if</span>(tAlarmDataEntityList.size()==<span class="hljs-number">0</span>)&#123;<br>            <span class="hljs-comment">//生成报警</span><br>            <span class="hljs-keyword">for</span> (DeviceInfo deviceInfo : deviceInfoList) &#123;<br>                <span class="hljs-comment">//随机一个报警类型</span><br>                <span class="hljs-type">int</span> <span class="hljs-variable">size</span> <span class="hljs-operator">=</span> alarmParamInfoEntityList.size();<br>                <span class="hljs-type">int</span> <span class="hljs-variable">index</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Random</span>().nextInt(size - <span class="hljs-number">1</span>);<br>                <span class="hljs-type">TAlarmParamInfoEntity</span> <span class="hljs-variable">paramInfoEntity</span> <span class="hljs-operator">=</span> alarmParamInfoEntityList.get(index);<br><br>                TAlarmDataEntity entity=<span class="hljs-keyword">new</span> <span class="hljs-title class_">TAlarmDataEntity</span>();<br>                entity.setDeviceId(deviceInfo.getId());<br>                entity.setAlarmParamId(paramInfoEntity.getId());<br>                entity.setAlarmSource(<span class="hljs-string">&quot;模拟数据&quot;</span>);<br>                entity.setAlarmsNumber(<span class="hljs-number">1</span>);<br>                entity.setWarehouseTime(currentTime);<br>                entity.setCreateTime(currentTime);<br>                entity.setIsDeleted(<span class="hljs-number">0</span>);<br>                tAlarmDataEntityList.add(entity);<br>            &#125;<br><br>            alarmDataMapper.batchInsert(tAlarmDataEntityList);<br>        &#125;<span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">for</span> (TAlarmDataEntity alarmDataEntity : tAlarmDataEntityList) &#123;<br>                alarmDataEntity.setWarehouseTime(currentTime);<br>                alarmDataEntity.setUpdateTime(currentTime);<br>            &#125;<br>            alarmDataMapper.batchUpdate(tAlarmDataEntityList);<br>        &#125;<br>        log.debug(<span class="hljs-string">&quot;定时报警end&quot;</span>);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><p>在定时一个类继承定时任务并注入已经完成的定时任务方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.qyny.common.config.quarz.job.genAlarm;<br><br><span class="hljs-keyword">import</span> com.qyny.common.config.quarz.handle.JobHandler;<br><span class="hljs-keyword">import</span> org.quartz.DisallowConcurrentExecution;<br><span class="hljs-keyword">import</span> org.quartz.JobExecutionContext;<br><span class="hljs-keyword">import</span> org.quartz.JobExecutionException;<br><span class="hljs-keyword">import</span> org.springframework.scheduling.quartz.QuartzJobBean;<br><span class="hljs-keyword">import</span> org.springframework.transaction.annotation.Transactional;<br><br><span class="hljs-keyword">import</span> javax.annotation.Resource;<br><span class="hljs-meta">@DisallowConcurrentExecution</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">GenerateAlarmJob</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">QuartzJobBean</span> &#123;<br><br>    <span class="hljs-meta">@Resource(type = GenerateAlarmHandler.class)</span><br>    <span class="hljs-keyword">private</span> JobHandler jobHandler;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">executeInternal</span><span class="hljs-params">(JobExecutionContext context)</span> <span class="hljs-keyword">throws</span> JobExecutionException &#123;<br>        jobHandler.handle();<br>    &#125;<br><br>&#125;<br><br></code></pre></td></tr></table></figure><h5 id="最后创建定时任务配置类"><a href="#最后创建定时任务配置类" class="headerlink" title="最后创建定时任务配置类"></a>最后创建定时任务配置类</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.qyny.common.config.quarz;<br><br><span class="hljs-keyword">import</span> com.qyny.common.config.quarz.job.genAlarm.GenerateAlarmJob;<br><span class="hljs-keyword">import</span> com.qyny.common.config.quarz.job.genAlarm.RealTimeAlarmJob;<br><span class="hljs-keyword">import</span> com.qyny.common.config.quarz.job.genAlarm.WarningBoardJob;<br><span class="hljs-keyword">import</span> com.qyny.common.config.quarz.job.genAmmeter.GenerateAmmeterDataJob;<br><span class="hljs-keyword">import</span> com.qyny.common.config.quarz.job.genBattery.GenerateBatteryDataJob;<br><span class="hljs-keyword">import</span> com.qyny.common.config.quarz.job.genBox.GenerateBoxDataJob;<br><span class="hljs-keyword">import</span> com.qyny.common.config.quarz.job.genClumps.GenerateClumpsDataJob;<br><span class="hljs-keyword">import</span> com.qyny.common.config.quarz.job.genHeap.GenerateHeapDataJob;<br><span class="hljs-keyword">import</span> com.qyny.common.config.quarz.job.genParallelCabinet.GenerateParallelCabinetDataJob;<br><span class="hljs-keyword">import</span> com.qyny.common.config.quarz.job.genPcs.GeneratePcsDataJob;<br><span class="hljs-keyword">import</span> com.qyny.common.config.quarz.job.genThreshold.GenerateThresholdDataJob;<br><span class="hljs-keyword">import</span> com.qyny.common.config.quarz.job.push.PushEquipmentDataJob;<br><span class="hljs-keyword">import</span> org.springframework.context.annotation.Configuration;<br><br><span class="hljs-keyword">import</span> org.quartz.*;<br><span class="hljs-keyword">import</span> org.springframework.context.annotation.Bean;<br><br><span class="hljs-meta">@Configuration</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">QuartzConfig</span> &#123;<br><br><br>    <span class="hljs-comment">//定时报警任务</span><br>    <span class="hljs-meta">@Bean</span><br>    <span class="hljs-keyword">public</span> JobDetail <span class="hljs-title function_">generateAlarmJob</span><span class="hljs-params">()</span>&#123;<br>        <span class="hljs-keyword">return</span> JobBuilder.newJob(GenerateAlarmJob.class)<br>                .withIdentity(<span class="hljs-string">&quot;generateAlarmJob&quot;</span>)<br>                .withDescription(<span class="hljs-string">&quot;定时报警任务&quot;</span>)<br>                .storeDurably()<br>                .build();<br>    &#125;<br><br>    <span class="hljs-comment">//定时报警任务 trigger</span><br>    <span class="hljs-meta">@Bean</span><br>    <span class="hljs-keyword">public</span> Trigger <span class="hljs-title function_">generatAlarmTrigger</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-comment">//创建触发器</span><br>        <span class="hljs-keyword">return</span> TriggerBuilder.newTrigger()<br>                <span class="hljs-comment">// 绑定工作任务</span><br>                .forJob(generateAlarmJob())<br>                <span class="hljs-comment">// 每隔 1秒执行一次 job</span><br>                .withSchedule(CronScheduleBuilder.cronSchedule(<span class="hljs-string">&quot;0/1 * * * * ?&quot;</span>))<br>                .build();<br>    &#125;<br><br>   <br><br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>java</tag>
      
      <tag>定时任务</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>发包流程</title>
    <link href="/posts/34134.html"/>
    <url>/posts/34134.html</url>
    
    <content type="html"><![CDATA[<h5 id="步骤一"><a href="#步骤一" class="headerlink" title="步骤一"></a>步骤一</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /home/app/cn-app/service   进入发包的目录<br></code></pre></td></tr></table></figure><h5 id="步骤二"><a href="#步骤二" class="headerlink" title="步骤二"></a>步骤二</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ps -ef |grep qyny<br></code></pre></td></tr></table></figure><h5 id="步骤三"><a href="#步骤三" class="headerlink" title="步骤三"></a>步骤三</h5><ul><li>查看jar包的进程ID  并杀死</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">kill</span> -9 xx<br></code></pre></td></tr></table></figure><h5 id="步骤四"><a href="#步骤四" class="headerlink" title="步骤四"></a>步骤四</h5><ul><li>启动服务</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">nohup</span> java -jar qyny_service_code-0.0.1-SNAPSHOT.jar  &gt;text.out 2&gt;&amp;1&amp;<br></code></pre></td></tr></table></figure><h5 id="步骤五"><a href="#步骤五" class="headerlink" title="步骤五"></a>步骤五</h5><ul><li>查看启动日志  确认程序正常启动</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">tail</span> -f text.out<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>配置文件</category>
      
    </categories>
    
    
    <tags>
      
      <tag>配置</tag>
      
      <tag>虚拟机</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>测试</title>
    <link href="/posts/37773.html"/>
    <url>/posts/37773.html</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    <categories>
      
      <category>测试模块</category>
      
    </categories>
    
    
    <tags>
      
      <tag>测试</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
