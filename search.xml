<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Java实现导出以及导入(多Sheet页)</title>
      <link href="/posts/62580.html"/>
      <url>/posts/62580.html</url>
      
        <content type="html"><![CDATA[<h2 id="Java实现导出以及导入"><a href="#Java实现导出以及导入" class="headerlink" title="Java实现导出以及导入"></a>Java实现导出以及导入</h2><h4 id="在项目中加入pom依赖"><a href="#在项目中加入pom依赖" class="headerlink" title="在项目中加入pom依赖"></a>在项目中加入pom依赖</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--        easyExcel--&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>easyexcel<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="首先介绍导出的全过程-单sheet页和多sheet"><a href="#首先介绍导出的全过程-单sheet页和多sheet" class="headerlink" title="首先介绍导出的全过程(单sheet页和多sheet)"></a>首先介绍导出的全过程(单sheet页和多sheet)</h4><ul><li><p>控制层</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ApiOperation(&quot;导出关于宝宝的数据&quot;)</span></span><br><span class="line">  <span class="meta">@PostMapping(&quot;/exportBaby&quot;)</span></span><br><span class="line">  <span class="meta">@ApiVersion(group = &#123;ApiVersionConsts.x_r&#125;)</span></span><br><span class="line">  <span class="keyword">public</span> JsonResponse <span class="title function_">exportBaby</span><span class="params">(HttpServletResponse response)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">      easyExcelService.exportBaby(response);</span><br><span class="line">      <span class="keyword">return</span> JsonResponse.success();</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="meta">@ApiOperation(&quot;导出关于宝宝的数据模板&quot;)</span></span><br><span class="line">  <span class="meta">@PostMapping(&quot;/exportBabyTemplates&quot;)</span></span><br><span class="line">  <span class="meta">@ApiVersion(group = &#123;ApiVersionConsts.x_r&#125;)</span></span><br><span class="line">  <span class="keyword">public</span> JsonResponse <span class="title function_">exportBabyTemplates</span><span class="params">(HttpServletResponse response)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">      easyExcelService.exportBabyTemplates(response);</span><br><span class="line">      <span class="keyword">return</span> JsonResponse.success();</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></li><li><p>业务层</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//接口</span></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 导出关于宝宝的数据</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> response</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">exportBaby</span><span class="params">(HttpServletResponse response)</span> <span class="keyword">throws</span> Exception;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 导出关于宝宝的数据模板</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> response</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">exportBabyTemplates</span><span class="params">(HttpServletResponse response)</span> <span class="keyword">throws</span> Exception;</span><br><span class="line"><span class="comment">//业务层</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 导出关于宝宝的数据</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> response</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">exportBaby</span><span class="params">(HttpServletResponse response)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        response.setCharacterEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">exportFileName</span> <span class="operator">=</span> URLEncoder.encode(<span class="string">&quot;关于宝宝&quot;</span>, <span class="string">&quot;UTF-8&quot;</span>).replaceAll(<span class="string">&quot;\\+&quot;</span>, <span class="string">&quot;%20&quot;</span>);</span><br><span class="line">        response.setHeader(<span class="string">&quot;Content-disposition&quot;</span>, <span class="string">&quot;attachment;filename=&quot;</span> + exportFileName + <span class="string">&quot;.xlsx&quot;</span>);</span><br><span class="line">        List&lt;PlayDto&gt; playDtoList = playMapper.getScore();</span><br><span class="line">        <span class="keyword">for</span> (PlayDto playDto:playDtoList)&#123;</span><br><span class="line">            <span class="keyword">if</span> (playDto.getXScore()==<span class="literal">null</span>)&#123;</span><br><span class="line">               playDto.setXScore(<span class="string">&quot;暂无评价&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (playDto.getStartTime()==<span class="literal">null</span>)&#123;</span><br><span class="line">                playDto.setStartTime(<span class="string">&quot;忘记时间&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        List&lt;TreatFood&gt; treatFoodList = treatFoodMapper.selectList(<span class="literal">null</span>);</span><br><span class="line">        List&lt;TreatAddress&gt; treatAddressList = treatAddressMapper.selectList(<span class="literal">null</span>);</span><br><span class="line">        <span class="keyword">for</span> (TreatAddress address : treatAddressList) &#123;</span><br><span class="line">            <span class="keyword">if</span> (StringUtils.isEmpty(address.getGoTime())) &#123;</span><br><span class="line">                address.setGoTime(<span class="string">&quot;暂无&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        List&lt;PrincessPeriod&gt; periodList = periodMapper.selectList(<span class="literal">null</span>);</span><br><span class="line">        List&lt;DislikedFood&gt; dislikedFoodList = dislikedFoodMapper.selectList(<span class="literal">null</span>);</span><br><span class="line">        List&lt;Angry&gt; angryList = angryMapper.selectList(<span class="literal">null</span>);</span><br><span class="line">        <span class="keyword">for</span> (Angry angry : angryList) &#123;</span><br><span class="line">            <span class="keyword">if</span> (StringUtils.isEmpty(angry.getAngryTime())) &#123;</span><br><span class="line">                angry.setAngryTime(<span class="string">&quot;暂无&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        List&lt;HarvestGifts&gt; harvestGiftsList = harvestGiftsMapper.selectList(<span class="literal">null</span>);</span><br><span class="line">        List&lt;Movie&gt; movieList = movieMapper.selectList(<span class="literal">null</span>);</span><br><span class="line">        List&lt;PointAttention&gt; pointAttentionList = attentionMapper.selectList(<span class="literal">null</span>);</span><br><span class="line">        List&lt;Alias&gt; aliasList = aliasMapper.selectList(<span class="literal">null</span>);</span><br><span class="line">        <span class="type">ExcelWriter</span> <span class="variable">excelriter</span> <span class="operator">=</span> EasyExcel.write(response.getOutputStream()).build();</span><br><span class="line">        <span class="type">WriteSheet</span> <span class="variable">writeSheet1</span> <span class="operator">=</span> EasyExcel.writerSheet(<span class="number">0</span>, <span class="string">&quot;恋爱日记外出&quot;</span>).head(PlayDto.class).build();</span><br><span class="line">        <span class="type">WriteSheet</span> <span class="variable">writeSheet2</span> <span class="operator">=</span> EasyExcel.writerSheet(<span class="number">1</span>, <span class="string">&quot;待吃食物&quot;</span>).head(TreatFood.class).build();</span><br><span class="line">        <span class="type">WriteSheet</span> <span class="variable">writeSheet3</span> <span class="operator">=</span> EasyExcel.writerSheet(<span class="number">2</span>, <span class="string">&quot;待吃地方&quot;</span>).head(TreatAddress.class).build();</span><br><span class="line">        <span class="type">WriteSheet</span> <span class="variable">writeSheet4</span> <span class="operator">=</span> EasyExcel.writerSheet(<span class="number">3</span>, <span class="string">&quot;宝宝经期表&quot;</span>).head(PrincessPeriod.class).build();</span><br><span class="line">        <span class="type">WriteSheet</span> <span class="variable">writeSheet5</span> <span class="operator">=</span> EasyExcel.writerSheet(<span class="number">4</span>, <span class="string">&quot;宝宝不喜欢吃的食物&quot;</span>).head(DislikedFood.class).build();</span><br><span class="line">        <span class="type">WriteSheet</span> <span class="variable">writeSheet6</span> <span class="operator">=</span> EasyExcel.writerSheet(<span class="number">5</span>, <span class="string">&quot;惹宝宝生气&quot;</span>).head(Angry.class).build();</span><br><span class="line">        <span class="type">WriteSheet</span> <span class="variable">writeSheet7</span> <span class="operator">=</span> EasyExcel.writerSheet(<span class="number">6</span>, <span class="string">&quot;宝宝送的礼物&quot;</span>).head(HarvestGifts.class).build();</span><br><span class="line">        <span class="type">WriteSheet</span> <span class="variable">writeSheet8</span> <span class="operator">=</span> EasyExcel.writerSheet(<span class="number">7</span>, <span class="string">&quot;和宝宝看的电影&quot;</span>).head(Movie.class).build();</span><br><span class="line">        <span class="type">WriteSheet</span> <span class="variable">writeSheet9</span> <span class="operator">=</span> EasyExcel.writerSheet(<span class="number">8</span>, <span class="string">&quot;注意事项&quot;</span>).head(PointAttention.class).build();</span><br><span class="line">        <span class="type">WriteSheet</span> <span class="variable">writeSheet10</span> <span class="operator">=</span> EasyExcel.writerSheet(<span class="number">9</span>, <span class="string">&quot;宝宝赐予的名字&quot;</span>).head(Alias.class).build();</span><br><span class="line">        excelriter.write(playDtoList, writeSheet1);</span><br><span class="line">        excelriter.write(treatFoodList, writeSheet2);</span><br><span class="line">        excelriter.write(treatAddressList, writeSheet3);</span><br><span class="line">        excelriter.write(periodList, writeSheet4);</span><br><span class="line">        excelriter.write(dislikedFoodList, writeSheet5);</span><br><span class="line">        excelriter.write(angryList, writeSheet6);</span><br><span class="line">        excelriter.write(harvestGiftsList, writeSheet7);</span><br><span class="line">        excelriter.write(movieList, writeSheet8);</span><br><span class="line">        excelriter.write(pointAttentionList, writeSheet9);</span><br><span class="line">        excelriter.write(aliasList, writeSheet10);</span><br><span class="line">        excelriter.finish();</span><br><span class="line">        response.flushBuffer();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">exportBabyTemplates</span><span class="params">(HttpServletResponse response)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line"></span><br><span class="line">        response.setCharacterEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">exportFileName</span> <span class="operator">=</span> URLEncoder.encode(<span class="string">&quot;导出关于宝宝的数据模板&quot;</span>, <span class="string">&quot;UTF-8&quot;</span>).replaceAll(<span class="string">&quot;\\+&quot;</span>, <span class="string">&quot;%20&quot;</span>);</span><br><span class="line">        response.setHeader(<span class="string">&quot;Content-disposition&quot;</span>, <span class="string">&quot;attachment;filename=&quot;</span> + exportFileName + <span class="string">&quot;.xlsx&quot;</span>);</span><br><span class="line"></span><br><span class="line">        List&lt;Play&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        EasyExcel.write(response.getOutputStream()).sheet(<span class="string">&quot;恋爱日记外出&quot;</span>).head(Play.class).doWrite(list);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li><li><p>Mapper层使用了mybatis-plus  实际可根据业务使用或自行编写SQL</p></li></ul><h4 id="导入的全过程-单sheet页和双sheet页"><a href="#导入的全过程-单sheet页和双sheet页" class="headerlink" title="导入的全过程(单sheet页和双sheet页)"></a>导入的全过程(单sheet页和双sheet页)</h4><ul><li><p>控制层</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PostMapping(&quot;/importBaby&quot;)</span></span><br><span class="line"> <span class="meta">@ApiOperation(&quot;导入关于宝宝的数据&quot;)</span></span><br><span class="line"> <span class="meta">@ApiVersion(group = &#123;ApiVersionConsts.x_r&#125;)</span></span><br><span class="line"> <span class="keyword">public</span> JsonResponse <span class="title function_">importBaby</span><span class="params">(<span class="meta">@RequestParam(&quot;file&quot;)</span> MultipartFile file, Play request)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">     easyExcelService.importBaby(file, request);</span><br><span class="line">     <span class="keyword">return</span> JsonResponse.success();</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></li><li><p>业务层</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//接口</span></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 导入数据</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> file</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> request</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> IOException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">importBaby</span><span class="params">(MultipartFile file, Play request)</span> <span class="keyword">throws</span> IOException;</span><br><span class="line"><span class="comment">//业务层--单sheet</span></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">importBaby</span><span class="params">(MultipartFile file, Play request)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">InputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> file.getInputStream();</span><br><span class="line">        EasyExcel.read(inputStream, Play.class, <span class="keyword">new</span> <span class="title class_">PlayListener</span>(playMapper)).doReadAll();</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">////业务层--双sheet </span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="meta">@Transactional(rollbackFor = Exception.class)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">importBaby</span><span class="params">(MultipartFile file)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        EasyExcel.read(  file.getInputStream(), Play.class, <span class="keyword">new</span> <span class="title class_">PlayListener</span>(playMapper)).sheet(<span class="number">0</span>).doRead();</span><br><span class="line">        EasyExcel.read(  file.getInputStream(), Angry.class, <span class="keyword">new</span> <span class="title class_">AngryListener</span>(angryMapper)).sheet(<span class="number">1</span>).doRead();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li><li><p>监听器</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.study.xu.listener;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.study.model.entity.xu.Play;</span><br><span class="line"><span class="keyword">import</span> cn.study.xu.mapper.PlayMapper;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.excel.context.AnalysisContext;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.excel.read.listener.ReadListener;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> lxx</span></span><br><span class="line"><span class="comment"> * date 2023/9/8</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PlayListener</span> <span class="keyword">implements</span> <span class="title class_">ReadListener</span>&lt;Play&gt; &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 每隔100条存储数据库，然后清理list ，方便内存回收</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">BATCH_COUNT</span> <span class="operator">=</span> <span class="number">10000</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 缓存的数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;Play&gt; cachedDataList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;(BATCH_COUNT);</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 假设这个是一个DAO，当然有业务逻辑这个也可以是一个service。当然如果不用存储这个对象没用。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> PlayMapper mapper;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">PlayListener</span><span class="params">(PlayMapper mapper)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.mapper = mapper;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onException</span><span class="params">(Exception e, AnalysisContext analysisContext)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">invoke</span><span class="params">(Play data, AnalysisContext analysisContext)</span> &#123;</span><br><span class="line">        cachedDataList.add(data);</span><br><span class="line">        <span class="comment">// 达到BATCH_COUNT了，需要去存储一次数据库，防止数据几万条数据在内存，容易OOM</span></span><br><span class="line">        <span class="keyword">if</span> (cachedDataList.size() &gt;= BATCH_COUNT) &#123;</span><br><span class="line">            saveData();</span><br><span class="line">            <span class="comment">// 存储完成清理 list</span></span><br><span class="line">            cachedDataList.clear();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    @Override</span></span><br><span class="line"><span class="comment">//    public void extra(CellExtra cellExtra, AnalysisContext analysisContext) &#123;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doAfterAllAnalysed</span><span class="params">(AnalysisContext analysisContext)</span> &#123;</span><br><span class="line">        <span class="comment">// 这里也要保存数据，确保最后遗留的数据也存储到数据库</span></span><br><span class="line">        saveData();</span><br><span class="line">        log.info(<span class="string">&quot;所有数据解析完成！&quot;</span>);</span><br><span class="line">        cachedDataList.clear();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">hasNext</span><span class="params">(AnalysisContext analysisContext)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 加上存储数据库</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">saveData</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">size</span> <span class="operator">=</span> cachedDataList.size();</span><br><span class="line">        <span class="keyword">if</span> (size &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            log.info(<span class="string">&quot;&#123;&#125;条数据，开始存储数据库！&quot;</span>, cachedDataList.size());</span><br><span class="line">            mapper.addSupplier(cachedDataList);</span><br><span class="line">            log.info(<span class="string">&quot;存储数据库成功！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>Mapper层</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">//接口</span><br><span class="line">void addSupplier(List<span class="tag">&lt;<span class="name">Play</span>&gt;</span> cachedDataList);</span><br><span class="line">//SQL</span><br><span class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;addSupplier&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;list&quot;</span>&gt;</span></span><br><span class="line">        insert into play(outSiders, address,eat_food,start_ime,end_time) values</span><br><span class="line">        <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">&quot;list&quot;</span> <span class="attr">item</span>=<span class="string">&quot;item&quot;</span> <span class="attr">separator</span>=<span class="string">&quot;,&quot;</span>&gt;</span></span><br><span class="line">            (#&#123;item.outsiders&#125;, #&#123;item.address&#125;,#&#123;item.eatFood&#125;,#&#123;item.startTime&#125;,#&#123;item.endTime&#125;)</span><br><span class="line">        <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java EasyExcel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基础常量类</title>
      <link href="/posts/42658.html"/>
      <url>/posts/42658.html</url>
      
        <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ls5g.mall.core.constant;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.math.BigDecimal;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> ljj 通用的常量工具类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CommonConstant</span> &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/*** 真*/</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Integer</span> <span class="variable">YES</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">    <span class="comment">/*** 假*/</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Integer</span> <span class="variable">NO</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Integer类型的0</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Integer INTEGER_ZERO= <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Integer类型的1</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Integer INTEGER_ONE= <span class="number">1</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Integer类型的2</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Integer INTEGER_TWO= <span class="number">2</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Integer类型的3</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Integer INTEGER_THREE= <span class="number">3</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Integer类型的4</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Integer INTEGER_FOUR= <span class="number">4</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Integer类型的5</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Integer INTEGER_FIVE= <span class="number">5</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Integer类型的6</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Integer INTEGER_SIX= <span class="number">6</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Integer类型的7</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Integer INTEGER_SEVEN= <span class="number">7</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Integer类型的8</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Integer INTEGER_EIGHT= <span class="number">8</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Integer类型的9</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Integer INTEGER_NINE= <span class="number">9</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Integer类型的10</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Integer INTEGER_TEN= <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * string类型的1</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String STRING_ONE=<span class="string">&quot;1&quot;</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * string类型的2</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String STRING_TWO=<span class="string">&quot;2&quot;</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * string类型的3</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String STRING_THREE=<span class="string">&quot;3&quot;</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * string类型的4</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String STRING_FOUR=<span class="string">&quot;4&quot;</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * string类型的5</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String STRING_FIVE=<span class="string">&quot;5&quot;</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * string类型的6</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String STRING_SIX=<span class="string">&quot;6&quot;</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * string类型的7</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String STRING_SEVEN=<span class="string">&quot;7&quot;</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * string类型的8</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String STRING_EIGHT=<span class="string">&quot;8&quot;</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * string类型的9</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String STRING_NINE=<span class="string">&quot;9&quot;</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * string类型的10</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String STRING_TEN=<span class="string">&quot;10&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 启用</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Integer</span> <span class="variable">Y_IS_ENABLE</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 停用</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Integer</span> <span class="variable">N_IS_ENABLE</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    </span><br><span class="line">       <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 删除</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Integer</span> <span class="variable">Y_IS_DELETE</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 未删除</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Integer</span> <span class="variable">N_IS_DELETE</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">  </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java 常量 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>实现序号自增业务层或Mapper层</title>
      <link href="/posts/26185.html"/>
      <url>/posts/26185.html</url>
      
        <content type="html"><![CDATA[<h2 id="主要介绍如何实现自增"><a href="#主要介绍如何实现自增" class="headerlink" title="主要介绍如何实现自增"></a>主要介绍如何实现自增</h2><ul><li>文件导出的序号自增</li><li>编号的尾号实现序号自增</li></ul><h2 id="Mapper层—文件导出的序号自增"><a href="#Mapper层—文件导出的序号自增" class="headerlink" title="Mapper层—文件导出的序号自增"></a>Mapper层—文件导出的序号自增</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ROW_NUMBER() OVER(ORDER BY <span class="string">&#x27;字段&#x27;</span>) as  id </span><br><span class="line"><span class="title function_">select</span> <span class="params">(<span class="meta">@i</span> := <span class="meta">@i</span> + <span class="number">1</span>)</span> as rownum,city FROM <span class="string">&#x27;表名&#x27;</span>,(select <span class="meta">@i</span> := <span class="number">0</span>) as init</span><br></pre></td></tr></table></figure><h2 id="或对查出来的结果进行遍历-set也可以实现序号自增"><a href="#或对查出来的结果进行遍历-set也可以实现序号自增" class="headerlink" title="或对查出来的结果进行遍历 set也可以实现序号自增"></a>或对查出来的结果进行遍历 set也可以实现序号自增</h2><p><img src="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202312271527092.png"></p><h2 id="业务层—编号的尾号实现序号自增"><a href="#业务层—编号的尾号实现序号自增" class="headerlink" title="业务层—编号的尾号实现序号自增"></a>业务层—编号的尾号实现序号自增</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取递增的序号</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> oldNum 原序号</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> digit  位数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">getNewNum</span><span class="params">(String oldNum, String digit)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isNotEmpty(oldNum) &amp;&amp; StringUtils.isNotEmpty(digit)) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">digitFormat</span> <span class="operator">=</span> <span class="string">&quot;%0&quot;</span> + digit + <span class="string">&quot;d&quot;</span>;</span><br><span class="line">            <span class="keyword">if</span> (<span class="literal">null</span> != oldNum) &#123;</span><br><span class="line">                <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> Integer.parseInt(oldNum) + <span class="number">1</span>;</span><br><span class="line">                oldNum = String.format(digitFormat, i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> oldNum;</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="comment">//输出结果</span></span><br><span class="line">  <span class="type">String</span> <span class="variable">oldNum</span> <span class="operator">=</span> getOldNum(<span class="string">&quot;0000&quot;</span>, <span class="string">&quot;4&quot;</span>);<span class="comment">//0001</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HuTool工具类</title>
      <link href="/posts/4186.html"/>
      <url>/posts/4186.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> HuTool </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>时间工具类</title>
      <link href="/posts/64329.html"/>
      <url>/posts/64329.html</url>
      
        <content type="html"><![CDATA[<h2 id="传入时间是否在某两个区间内"><a href="#传入时间是否在某两个区间内" class="headerlink" title="传入时间是否在某两个区间内"></a>传入时间是否在某两个区间内</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 传入时间是否在某两个区间内</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> time  传入的时间</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> smallTime 较小的时间</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> bigTime 较大的时间</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">isInterval</span><span class="params">(String time,String smallTime,String bigTime)</span> &#123;</span><br><span class="line">        <span class="type">Date</span> <span class="variable">cTime</span> <span class="operator">=</span> Convert.toDate(time);</span><br><span class="line">  <span class="keyword">return</span> cTime.after(Convert.toDate(smallTime)) &amp;&amp; cTime.before(Convert.toDate(bigTime));</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><img src="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202312141752842.png"></p><h2 id="传入时间是否在某两个区间内-年-月-日-时-分-秒"><a href="#传入时间是否在某两个区间内-年-月-日-时-分-秒" class="headerlink" title="传入时间是否在某两个区间内(年 月 日 时 分 秒)"></a>传入时间是否在某两个区间内(年 月 日 时 分 秒)</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     *  判断时间是否在两个时间区间内</span></span><br><span class="line"><span class="comment">     *  该方法主要判断是否在小时的区间内</span></span><br><span class="line"><span class="comment">     *  也可以自己进行改造 是否在年 月 日 时 分 秒 都可</span></span><br><span class="line"><span class="comment">     *  后续指定时间若是查出来的时间 可将入参替换为集合在方法内遍历即可</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> time   需要判断的时间</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sTime  指定的时间1 较大的时间</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> eTime  指定的时间2 较小的时间</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">isBetween</span><span class="params">(String time, Integer sTime, Integer eTime)</span> &#123;</span><br><span class="line">        <span class="type">DateTimeFormatter</span> <span class="variable">dateFormatter</span> <span class="operator">=</span> DateTimeFormatter.ofPattern(<span class="string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>);</span><br><span class="line">        <span class="type">LocalDateTime</span> <span class="variable">dateTime</span> <span class="operator">=</span> LocalDateTime.parse(time, dateFormatter);</span><br><span class="line">            <span class="type">LocalDateTime</span> <span class="variable">startTime</span> <span class="operator">=</span> dateTime.withHour(sTime).withMinute(<span class="number">0</span>);</span><br><span class="line">            <span class="type">LocalDateTime</span> <span class="variable">endTime</span> <span class="operator">=</span> dateTime.withHour(eTime).withMinute(<span class="number">0</span>);</span><br><span class="line">            <span class="keyword">if</span> (dateTime.isAfter(startTime) &amp;&amp; dateTime.isBefore(endTime)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">         <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><img src="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202312281512612.png"></p><h2 id="获取传入时间的24个小时集合-yyyy-MM-dd-HH"><a href="#获取传入时间的24个小时集合-yyyy-MM-dd-HH" class="headerlink" title="获取传入时间的24个小时集合(yyyy-MM-dd HH)"></a>获取传入时间的24个小时集合(yyyy-MM-dd HH)</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取传入时间的24个小时集合  yyyy-MM-dd HH</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span>  nowTime 传入时间</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> ParseException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> List&lt;String&gt; <span class="title function_">afferentTimeToTwoFour</span><span class="params">(String nowTime)</span> &#123;</span><br><span class="line">        <span class="type">SimpleDateFormat</span> <span class="variable">df</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot;yyyy-MM-dd 00&quot;</span>);</span><br><span class="line">        SimpleDateFormat format=<span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot;yyyy-MM-dd HH&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> df.format(Convert.toDate(nowTime));</span><br><span class="line">        <span class="type">Date</span> <span class="variable">date</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            date = df.parse(s);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ParseException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">        &#125;</span><br><span class="line">        List&lt;String&gt; dates = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;String&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">23</span>; i++) &#123;</span><br><span class="line">            <span class="type">Calendar</span> <span class="variable">cal</span> <span class="operator">=</span> Calendar.getInstance();</span><br><span class="line">            cal.setTime(date);</span><br><span class="line">            cal.add(Calendar.HOUR, <span class="number">1</span>);</span><br><span class="line">            date = cal.getTime();</span><br><span class="line">            <span class="type">String</span> <span class="variable">s1</span> <span class="operator">=</span> format.format(date);</span><br><span class="line">            dates.add(s1);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dates;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//输出结果</span></span><br><span class="line">[<span class="number">2023</span>-<span class="number">12</span>-<span class="number">28</span> <span class="number">01</span>, <span class="number">2023</span>-<span class="number">12</span>-<span class="number">28</span> <span class="number">02</span>, <span class="number">2023</span>-<span class="number">12</span>-<span class="number">28</span> <span class="number">03</span>, <span class="number">2023</span>-<span class="number">12</span>-<span class="number">28</span> <span class="number">04</span>, <span class="number">2023</span>-<span class="number">12</span>-<span class="number">28</span> <span class="number">05</span>, <span class="number">2023</span>-<span class="number">12</span>-<span class="number">28</span> <span class="number">06</span>, <span class="number">2023</span>-<span class="number">12</span>-<span class="number">28</span> <span class="number">07</span>, <span class="number">2023</span>-<span class="number">12</span>-<span class="number">28</span> 08, <span class="number">2023</span>-<span class="number">12</span>-<span class="number">28</span> 09, <span class="number">2023</span>-<span class="number">12</span>-<span class="number">28</span> <span class="number">10</span>, <span class="number">2023</span>-<span class="number">12</span>-<span class="number">28</span> <span class="number">11</span>, <span class="number">2023</span>-<span class="number">12</span>-<span class="number">28</span> <span class="number">12</span>, <span class="number">2023</span>-<span class="number">12</span>-<span class="number">28</span> <span class="number">13</span>, <span class="number">2023</span>-<span class="number">12</span>-<span class="number">28</span> <span class="number">14</span>, <span class="number">2023</span>-<span class="number">12</span>-<span class="number">28</span> <span class="number">15</span>, <span class="number">2023</span>-<span class="number">12</span>-<span class="number">28</span> <span class="number">16</span>, <span class="number">2023</span>-<span class="number">12</span>-<span class="number">28</span> <span class="number">17</span>, <span class="number">2023</span>-<span class="number">12</span>-<span class="number">28</span> <span class="number">18</span>, <span class="number">2023</span>-<span class="number">12</span>-<span class="number">28</span> <span class="number">19</span>, <span class="number">2023</span>-<span class="number">12</span>-<span class="number">28</span> <span class="number">20</span>, <span class="number">2023</span>-<span class="number">12</span>-<span class="number">28</span> <span class="number">21</span>, <span class="number">2023</span>-<span class="number">12</span>-<span class="number">28</span> <span class="number">22</span>, <span class="number">2023</span>-<span class="number">12</span>-<span class="number">28</span> <span class="number">23</span>]</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="获取当前时间的前15天集合"><a href="#获取当前时间的前15天集合" class="headerlink" title="获取当前时间的前15天集合"></a>获取当前时间的前15天集合</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取当前时间的前15天集合  yyyy-MM-dd</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> List&lt;String&gt;  <span class="title function_">monthBeforeFifteen</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">SimpleDateFormat</span> <span class="variable">sdf</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot;yyyy-MM-dd&quot;</span>);</span><br><span class="line">        List&lt;String&gt; time = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="type">Date</span> <span class="variable">date</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line">        <span class="type">String</span> <span class="variable">format1</span> <span class="operator">=</span> sdf.format(date);<span class="comment">//今天时间</span></span><br><span class="line">        time.add(format1);<span class="comment">//先插入今天时间</span></span><br><span class="line">        <span class="type">Calendar</span> <span class="variable">calendar</span> <span class="operator">=</span> Calendar.getInstance();</span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">1</span>;i&lt;<span class="number">15</span>;i++)&#123;</span><br><span class="line">            a=a++; <span class="comment">//天数 一开始为1天 则为昨天 之后递增</span></span><br><span class="line">            calendar.set(Calendar.DAY_OF_YEAR, calendar.get(Calendar.DAY_OF_YEAR) - a);</span><br><span class="line">            <span class="type">Date</span> <span class="variable">today</span> <span class="operator">=</span> calendar.getTime();</span><br><span class="line">            <span class="type">String</span> <span class="variable">format</span> <span class="operator">=</span> sdf.format(today);  <span class="comment">//转换成格式化字符串</span></span><br><span class="line">            time.add(format); <span class="comment">//将14天日期加入到list里</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> time;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//输出结果</span></span><br><span class="line">[<span class="number">2023</span>-<span class="number">12</span>-<span class="number">28</span>, <span class="number">2023</span>-<span class="number">12</span>-<span class="number">27</span>, <span class="number">2023</span>-<span class="number">12</span>-<span class="number">26</span>, <span class="number">2023</span>-<span class="number">12</span>-<span class="number">25</span>, <span class="number">2023</span>-<span class="number">12</span>-<span class="number">24</span>, <span class="number">2023</span>-<span class="number">12</span>-<span class="number">23</span>, <span class="number">2023</span>-<span class="number">12</span>-<span class="number">22</span>, <span class="number">2023</span>-<span class="number">12</span>-<span class="number">21</span>, <span class="number">2023</span>-<span class="number">12</span>-<span class="number">20</span>, <span class="number">2023</span>-<span class="number">12</span>-<span class="number">19</span>, <span class="number">2023</span>-<span class="number">12</span>-<span class="number">18</span>, <span class="number">2023</span>-<span class="number">12</span>-<span class="number">17</span>, <span class="number">2023</span>-<span class="number">12</span>-<span class="number">16</span>, <span class="number">2023</span>-<span class="number">12</span>-<span class="number">15</span>, <span class="number">2023</span>-<span class="number">12</span>-<span class="number">14</span>]</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="通过当前时间获取当月的全部天数-可格式化时间"><a href="#通过当前时间获取当月的全部天数-可格式化时间" class="headerlink" title="通过当前时间获取当月的全部天数(可格式化时间)"></a>通过当前时间获取当月的全部天数(可格式化时间)</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 通过当前时间获取当月的全部天数</span></span><br><span class="line"><span class="comment">     * 可更改时间的类型</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span>  List&lt;String&gt;  <span class="title function_">monthToDay</span><span class="params">()</span>&#123;</span><br><span class="line">        List&lt;String&gt; result=<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="type">SimpleDateFormat</span> <span class="variable">sdf</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot;yyyy-MM-dd&quot;</span>);</span><br><span class="line">        List&lt;Date&gt; list = getAllTheDateOftheMonth(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">        <span class="keyword">for</span>(Date date: list)&#123;</span><br><span class="line">            result.add(sdf.format(date));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">      <span class="keyword">private</span> <span class="keyword">static</span> List&lt;Date&gt; <span class="title function_">getAllTheDateOftheMonth</span><span class="params">(Date date)</span> &#123;</span><br><span class="line">        List&lt;Date&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;Date&gt;();</span><br><span class="line">        <span class="type">Calendar</span> <span class="variable">cal</span> <span class="operator">=</span> Calendar.getInstance();</span><br><span class="line">        cal.setTime(date);</span><br><span class="line">        cal.set(Calendar.DATE, <span class="number">1</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">month</span> <span class="operator">=</span> cal.get(Calendar.MONTH);</span><br><span class="line">        <span class="keyword">while</span>(cal.get(Calendar.MONTH) == month)&#123;</span><br><span class="line">            list.add(cal.getTime());</span><br><span class="line">            cal.add(Calendar.DATE, <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//输出结果</span></span><br><span class="line">[<span class="number">2023</span>-<span class="number">12</span>-<span class="number">01</span>, <span class="number">2023</span>-<span class="number">12</span>-<span class="number">02</span>, <span class="number">2023</span>-<span class="number">12</span>-<span class="number">03</span>, <span class="number">2023</span>-<span class="number">12</span>-<span class="number">04</span>, <span class="number">2023</span>-<span class="number">12</span>-<span class="number">05</span>, <span class="number">2023</span>-<span class="number">12</span>-<span class="number">06</span>, <span class="number">2023</span>-<span class="number">12</span>-<span class="number">07</span>, <span class="number">2023</span>-<span class="number">12</span>-08, <span class="number">2023</span>-<span class="number">12</span>-09, <span class="number">2023</span>-<span class="number">12</span>-<span class="number">10</span>, <span class="number">2023</span>-<span class="number">12</span>-<span class="number">11</span>, <span class="number">2023</span>-<span class="number">12</span>-<span class="number">12</span>, <span class="number">2023</span>-<span class="number">12</span>-<span class="number">13</span>, <span class="number">2023</span>-<span class="number">12</span>-<span class="number">14</span>, <span class="number">2023</span>-<span class="number">12</span>-<span class="number">15</span>, <span class="number">2023</span>-<span class="number">12</span>-<span class="number">16</span>, <span class="number">2023</span>-<span class="number">12</span>-<span class="number">17</span>, <span class="number">2023</span>-<span class="number">12</span>-<span class="number">18</span>, <span class="number">2023</span>-<span class="number">12</span>-<span class="number">19</span>, <span class="number">2023</span>-<span class="number">12</span>-<span class="number">20</span>, <span class="number">2023</span>-<span class="number">12</span>-<span class="number">21</span>, <span class="number">2023</span>-<span class="number">12</span>-<span class="number">22</span>, <span class="number">2023</span>-<span class="number">12</span>-<span class="number">23</span>, <span class="number">2023</span>-<span class="number">12</span>-<span class="number">24</span>, <span class="number">2023</span>-<span class="number">12</span>-<span class="number">25</span>, <span class="number">2023</span>-<span class="number">12</span>-<span class="number">26</span>, <span class="number">2023</span>-<span class="number">12</span>-<span class="number">27</span>, <span class="number">2023</span>-<span class="number">12</span>-<span class="number">28</span>, <span class="number">2023</span>-<span class="number">12</span>-<span class="number">29</span>, <span class="number">2023</span>-<span class="number">12</span>-<span class="number">30</span>, <span class="number">2023</span>-<span class="number">12</span>-<span class="number">31</span>]</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="每150分钟分割一次-两个半小时"><a href="#每150分钟分割一次-两个半小时" class="headerlink" title="每150分钟分割一次(两个半小时)"></a>每150分钟分割一次(两个半小时)</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 每150分钟分割一次(两个半小时)  yyyy-MM-dd HH:mm</span></span><br><span class="line"><span class="comment">     * 0-18 若是整天可以切换为24</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> List&lt;String&gt; <span class="title function_">hundredFiftyNow</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">Calendar</span> <span class="variable">calendar</span> <span class="operator">=</span> Calendar.getInstance();</span><br><span class="line">        <span class="type">SimpleDateFormat</span> <span class="variable">sdf</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot;yyyy-MM-dd HH:mm&quot;</span>);</span><br><span class="line">        List&lt;String&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置起始时间为0:00</span></span><br><span class="line">        calendar.set(Calendar.HOUR_OF_DAY, <span class="number">0</span>);</span><br><span class="line">        calendar.set(Calendar.MINUTE, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">intervalMinutes</span> <span class="operator">=</span> <span class="number">30</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (calendar.get(Calendar.HOUR_OF_DAY) &lt; <span class="number">18</span>) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">startTime</span> <span class="operator">=</span> sdf.format(calendar.getTime());</span><br><span class="line">            String time= startTime+<span class="string">&quot;:00&quot;</span>;</span><br><span class="line">            <span class="comment">// 增加2.5小时</span></span><br><span class="line">            calendar.add(Calendar.MINUTE, intervalMinutes * <span class="number">5</span>);</span><br><span class="line"></span><br><span class="line">            list.add(time);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//输出结果</span></span><br><span class="line">[<span class="number">2023</span>-<span class="number">12</span>-<span class="number">28</span> <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>, <span class="number">2023</span>-<span class="number">12</span>-<span class="number">28</span> <span class="number">02</span>:<span class="number">30</span>:<span class="number">00</span>, <span class="number">2023</span>-<span class="number">12</span>-<span class="number">28</span> <span class="number">05</span>:<span class="number">00</span>:<span class="number">00</span>, <span class="number">2023</span>-<span class="number">12</span>-<span class="number">28</span> <span class="number">07</span>:<span class="number">30</span>:<span class="number">00</span>, <span class="number">2023</span>-<span class="number">12</span>-<span class="number">28</span> <span class="number">10</span>:<span class="number">00</span>:<span class="number">00</span>, <span class="number">2023</span>-<span class="number">12</span>-<span class="number">28</span> <span class="number">12</span>:<span class="number">30</span>:<span class="number">00</span>, <span class="number">2023</span>-<span class="number">12</span>-<span class="number">28</span> <span class="number">15</span>:<span class="number">00</span>:<span class="number">00</span>, <span class="number">2023</span>-<span class="number">12</span>-<span class="number">28</span> <span class="number">17</span>:<span class="number">30</span>:<span class="number">00</span>]</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="判断某天是否是周末（周六或周日）"><a href="#判断某天是否是周末（周六或周日）" class="headerlink" title="判断某天是否是周末（周六或周日）"></a>判断某天是否是周末（周六或周日）</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断某天是否是周末（周六或周日）</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> date 判断日期</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> boolean</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">isWeekend</span><span class="params">(Date date)</span> &#123;</span><br><span class="line">        <span class="type">Calendar</span> <span class="variable">calendar</span> <span class="operator">=</span> Calendar.getInstance();</span><br><span class="line">        calendar.setTime(date);</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">weekFlag</span> <span class="operator">=</span> calendar.get(Calendar.DAY_OF_WEEK);</span><br><span class="line">        <span class="keyword">return</span> weekFlag == Calendar.SATURDAY || weekFlag == Calendar.SUNDAY;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//输出结果  2023-12-28</span></span><br><span class="line"><span class="literal">false</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 时间 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java,工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL中的时间函数</title>
      <link href="/posts/9968.html"/>
      <url>/posts/9968.html</url>
      
        <content type="html"><![CDATA[<h2 id="DATE-FORMAT-介绍"><a href="#DATE-FORMAT-介绍" class="headerlink" title="DATE_FORMAT()介绍"></a>DATE_FORMAT()介绍</h2><p><code>DATE_FORMAT()</code>函数接受两个参数：</p><ul><li><code>date</code>：是要格式化的有效日期值</li><li><code>format</code>：是由预定义的说明符组成的格式字符串，每个说明符前面都有一个百分比字符(<code>%</code>)。有关预定义说明符的列表，请参见下表。</li></ul><p><code>DATE_FORMAT</code>函数返回字符集和校对规则取决于客户端连接的设置的字符串。</p><p>下表说明了可用于构建日期格式字符串的<a href="https://so.csdn.net/so/search?q=%E8%AF%B4%E6%98%8E%E7%AC%A6&spm=1001.2101.3001.7020">说明符</a>及其含义：</p><table><thead><tr><th><strong>限定符</strong></th><th><strong>含义</strong></th></tr></thead><tbody><tr><td><code>%a</code></td><td>三个字符缩写的工作日名称，例如:<em>Mon</em>, <em>Tue</em>, <em>Wed</em>,等</td></tr><tr><td><code>%b</code></td><td>三个字符缩写的月份名称，例如：<em>Jan</em>，<em>Feb</em>，<em>Mar</em>等</td></tr><tr><td><code>%c</code></td><td>以数字表示的月份值，例如：1, 2, 3…12</td></tr><tr><td><code>%D</code></td><td>英文后缀如：<em>0th</em>, <em>1st</em>, <em>2nd</em>等的一个月之中的第几天</td></tr><tr><td><code>%d</code></td><td>如果是<code>1</code>个数字(小于<code>10</code>)，那么一个月之中的第几天表示为加前导加<code>0</code>， 如：00, 01,02, …31</td></tr><tr><td><code>%e</code></td><td>没有前导零的月份的日子，例如：1,2，… 31</td></tr><tr><td><code>%f</code></td><td>微秒，范围在<code>000000..999999</code></td></tr><tr><td><code>%H</code></td><td>24小时格式的小时，前导加<code>0</code>，例如：00,01…23</td></tr><tr><td><code>%h</code></td><td>小时，12小时格式，带前导零，例如：01，02 … 12</td></tr><tr><td><code>%I</code></td><td>与<code>%h</code>相同</td></tr><tr><td><code>%i</code></td><td>分数为零，例如：00,01，… 59</td></tr><tr><td><code>%j</code></td><td>一年中的的第几天，前导为<code>0</code>，例如，001,002，… 366</td></tr><tr><td><code>%k</code></td><td>24小时格式的小时，无前导零，例如：0,1,2 … 23</td></tr><tr><td><code>%l</code></td><td>12小时格式的小时，无前导零，例如：0,1,2 … 12</td></tr><tr><td><code>%M</code></td><td>月份全名称，例如：January, February,…December</td></tr><tr><td><code>%m</code></td><td>具有前导零的月份名称，例如：00,01,02，… 12</td></tr><tr><td><code>%p</code></td><td><code>AM</code>或<code>PM</code>，取决于其他时间说明符</td></tr><tr><td><code>%r</code></td><td>表示时间，<code>12</code>小时格式<code>hh:mm:ss AM</code>或<code>PM</code></td></tr><tr><td><code>%S</code></td><td>表示秒，前导零，如：00,01，… 59</td></tr><tr><td><code>%s</code></td><td>与<code>%S</code>相同</td></tr><tr><td><code>%T</code></td><td>表示时间，24小时格式<code>hh:mm:ss</code></td></tr><tr><td><code>%U</code></td><td>周的第一天是星期日，例如：00,01,02 … 53时，前导零的周数</td></tr><tr><td><code>%u</code></td><td>周的第一天是星期一，例如：00,01,02 … 53时，前导零的周数</td></tr><tr><td><code>%V</code></td><td>与<code>%U</code>相同，它与<code>%X</code>一起使用</td></tr><tr><td><code>%v</code></td><td>与<code>%u</code>相同，它与<code>%x</code>一起使用</td></tr><tr><td><code>%W</code></td><td>工作日的全称，例如：Sunday, Monday,…, Saturday</td></tr><tr><td><code>%w</code></td><td>工作日，以数字来表示(0 &#x3D; 星期日，1 &#x3D; 星期一等)</td></tr><tr><td><code>%X</code></td><td>周的四位数表示年份,第一天是星期日; 经常与<code>%V</code>一起使用</td></tr><tr><td><code>%x</code></td><td>周的四位数表示年份,第一天是星期日; 经常与<code>%v</code>一起使用</td></tr><tr><td><code>%Y</code></td><td>表示年份，四位数，例如2000，2001，…等。</td></tr><tr><td><code>%y</code></td><td>表示年份，两位数，例如00，01，…等。</td></tr><tr><td><code>%%</code></td><td>将百分比(<code>%</code>)字符添加到输出</td></tr></tbody></table><h4 id="实例如下"><a href="#实例如下" class="headerlink" title="实例如下:"></a>实例如下:</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">%Y-%m-%d---<span class="number">2023</span>/<span class="number">12</span>/<span class="number">13</span> <span class="comment">//年月日</span></span><br><span class="line">%Y-%m-%d %H:%i:%S---<span class="number">2023</span>/<span class="number">12</span>/<span class="number">13</span>/<span class="number">23</span>:<span class="number">11</span>:<span class="number">56</span> <span class="comment">//年月日 时分秒</span></span><br><span class="line">DATE_FORMAT(time,<span class="string">&#x27;%Y-%m-%d&#x27;</span>)=<span class="string">&#x27;2023/12/13&#x27;</span> <span class="comment">//实际应用</span></span><br></pre></td></tr></table></figure><h2 id="DATE-SUB-的介绍"><a href="#DATE-SUB-的介绍" class="headerlink" title="DATE_SUB()的介绍"></a>DATE_SUB()的介绍</h2><p><strong>一、定义</strong></p><p>  DATE_SUB() 函数从日期减去指定的时间间隔。</p><p><strong>二、语法</strong></p><p>  DATE_SUB(date, INTERVAL expr type)</p><p>  date 参数是合法的日期表达式  expr 参数是希望添加的时间间隔。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">AND time &gt;= DATE_SUB(NOW(), INTERVAL <span class="number">2</span> HOUR) AND time &lt;= NOW();<span class="comment">//近两个小时</span></span><br><span class="line">AND time &gt;= DATE_SUB(NOW(), INTERVAL <span class="number">2</span> DAY) AND time &lt;= NOW();<span class="comment">//近两天</span></span><br><span class="line">AND time &gt;= DATE_SUB(NOW(), INTERVAL <span class="number">2</span> MONTH) AND time &lt;= NOW();<span class="comment">//近两月</span></span><br><span class="line">AND time &gt;= DATE_SUB(NOW(), INTERVAL <span class="number">2</span> YEAR) AND time &lt;= NOW();<span class="comment">//近两年</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java,MYSQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>时间戳与时间的互相转换</title>
      <link href="/posts/53486.html"/>
      <url>/posts/53486.html</url>
      
        <content type="html"><![CDATA[<h3 id="主要介绍时间戳怎么转换为时间类型"><a href="#主要介绍时间戳怎么转换为时间类型" class="headerlink" title="主要介绍时间戳怎么转换为时间类型"></a>主要介绍时间戳怎么转换为时间类型</h3><ul><li>在工作中偶尔会遇到接入数据时存进来的时间是时间戳的方式存在</li><li>如:1702471660000此种方式的时间 在做一些业务时需要转换为能看懂的时间</li><li>如需在数据库对时间戳进行解析  使用from_unixtime(1702471660000&#x2F; 1000)即可</li></ul><p><img src="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202312132059455.png"></p><h3 id="提供时间戳与时间互相转换的方法"><a href="#提供时间戳与时间互相转换的方法" class="headerlink" title="提供时间戳与时间互相转换的方法"></a>提供时间戳与时间互相转换的方法</h3><ul><li>将时间转换为时间戳</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将时间转换为时间戳</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> time</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">dateToStamp</span><span class="params">(String time)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">SimpleDateFormat</span> <span class="variable">simpleDateFormat</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>);</span><br><span class="line">        <span class="type">Date</span> <span class="variable">date</span> <span class="operator">=</span> simpleDateFormat.parse(time);</span><br><span class="line">        <span class="type">long</span> <span class="variable">ts</span> <span class="operator">=</span> date.getTime();</span><br><span class="line">        <span class="keyword">return</span> String.valueOf(ts);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ul><li>将时间戳转换为时间</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 将时间戳转换为时间</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> s</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">   * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">stampToTime</span><span class="params">(String s)</span> <span class="keyword">throws</span> Exception&#123;</span><br><span class="line">      <span class="type">SimpleDateFormat</span> <span class="variable">simpleDateFormat</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>);</span><br><span class="line">      <span class="type">long</span> <span class="variable">lt</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Long</span>(s); <span class="comment">//将时间戳转换为时间</span></span><br><span class="line">      <span class="type">Date</span> <span class="variable">date</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Date</span>(lt); <span class="comment">//将时间调整为yyyy-MM-dd HH:mm:ss时间样式</span></span><br><span class="line">      <span class="type">String</span> <span class="variable">res</span> <span class="operator">=</span> simpleDateFormat.format(date);</span><br><span class="line">      <span class="keyword">return</span> res;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><ul><li>结果如下</li></ul><p><img src="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202312132051795.png"></p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java,工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>近期JAVA总结</title>
      <link href="/posts/27699.html"/>
      <url>/posts/27699.html</url>
      
        <content type="html"><![CDATA[<h4 id="如遇到字符串的多个id需要进行删除单个id时使用"><a href="#如遇到字符串的多个id需要进行删除单个id时使用" class="headerlink" title="如遇到字符串的多个id需要进行删除单个id时使用"></a>如遇到字符串的多个id需要进行删除单个id时使用</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//业务层 </span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">removeFileId</span><span class="params">(FileDto fileDto)</span> &#123;</span><br><span class="line">        <span class="comment">//4385784365,45678456</span></span><br><span class="line">     List&lt;Hexotest&gt; fileIdList = hexotestMapper.selectList(<span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;Hexotest&gt;().like(<span class="string">&quot;file_id&quot;</span>, fileDto.getFileId()));</span><br><span class="line">        <span class="keyword">for</span> (Hexotest item : fileIdList) &#123;</span><br><span class="line">            <span class="keyword">if</span> (item.getFileId().contains(fileDto.getFileId())) &#123;</span><br><span class="line">                <span class="comment">//对查出来的id进行分割</span></span><br><span class="line">                String[] split = item.getFileId().split(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">                <span class="comment">//将分割后的id集合放入list中</span></span><br><span class="line">                List&lt;String&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;(Arrays.asList(split));</span><br><span class="line">                <span class="keyword">if</span> (list.contains(fileDto.getFileId())) &#123;</span><br><span class="line">                    <span class="comment">//对需要删除的id移除后重新set进去并修改表字段</span></span><br><span class="line">                    list.remove(fileDto.getFileId());</span><br><span class="line">                    item.setFileId(String.join(<span class="string">&quot;,&quot;</span>, list));</span><br><span class="line">                    hexotestMapper.editFileId(item.getFileId(), item.getId());</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//mapper层</span></span><br><span class="line"> &lt;update id=<span class="string">&quot;editFileId&quot;</span>&gt;</span><br><span class="line">        UPDATE hexotest set file_id=#&#123;fileId&#125; WHERE id=#&#123;id&#125;</span><br><span class="line">  &lt;/update&gt;</span><br></pre></td></tr></table></figure><h4 id="mapper层需要注意的地方-以及使用union-all的注意事项"><a href="#mapper层需要注意的地方-以及使用union-all的注意事项" class="headerlink" title="mapper层需要注意的地方 以及使用union all的注意事项"></a>mapper层需要注意的地方 以及使用union all的注意事项</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">List&lt;FilingFile&gt; <span class="title function_">getFileInfoList</span></span><br><span class="line">    <span class="params">(<span class="meta">@Param(&quot;fileIdList&quot;)</span> List&lt;String&gt; fileId,</span></span><br><span class="line"><span class="params">     <span class="meta">@Param(&quot;filingFileVO&quot;)</span> FilingFileVO filingFileVO)</span>;</span><br></pre></td></tr></table></figure><ul><li>在dao层使用@Param注解的话  IF条件也需要带上指定前缀</li><li>union all在上下字段不统一时  可使用’’代替</li><li>且select * (***)时  在外层使用T 可对整个结果进行搜索或查询</li></ul><p><img src="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202312112020320.png"></p><h4 id="在对已经查出来的list还想继续排序时可使用"><a href="#在对已经查出来的list还想继续排序时可使用" class="headerlink" title="在对已经查出来的list还想继续排序时可使用"></a>在对已经查出来的list还想继续排序时可使用</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fileDtoList.stream().sorted(Comparator.comparing(FilingFile::getCreated)).collect(Collectors.toList());</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JAVA,工作总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Springboot整合Aop基础版</title>
      <link href="/posts/52307.html"/>
      <url>/posts/52307.html</url>
      
        <content type="html"><![CDATA[<h3 id="本篇文章主要介绍如何使用aop"><a href="#本篇文章主要介绍如何使用aop" class="headerlink" title="本篇文章主要介绍如何使用aop"></a>本篇文章主要介绍如何使用aop</h3><blockquote><p>面向切面编程（AOP）是一种编程技术，它通过预编译和运行期动态代理的方式，实现了程序功能的统一维护。AOP可以用来对业务逻辑的各个部分进行隔离，从而降低业务逻辑各部分之间的耦合度，提高程序的可重用性，同时提高开发的效率。</p><p>在AOP中，切面（Aspect）是用来描述程序中的横切关注点的模块，比如日志记录、事务管理等。这些关注点与业务逻辑分离，可以在程序运行期间动态地切入到各个业务方法中，实现对业务逻辑的横切关注。</p><p>AOP的实现方式有多种，包括基于代理、基于反射等。其中，基于代理的AOP使用代理对象来拦截方法调用，实现切面的动态切入。基于反射的AOP则通过反射机制来动态地获取和修改类的方法。</p><p>AOP的应用范围非常广泛，可以用于实现日志记录、事务管理、安全控制等功能。同时，AOP也可以与OOP结合使用，形成面向对象和面向切面编程的结合，进一步提高程序的模块化和可维护性。</p></blockquote><h2 id="1-通配符使用"><a href="#1-通配符使用" class="headerlink" title="1.通配符使用"></a>1.通配符使用</h2><p>（1） * ：单个独立的任意符号，可以独立出现，也可以作为前缀或者后缀的匹配符出现</p><p>示例：匹配com.jss包下的任意包中的UserService类或接口中所有find开头的带有一个参数的方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">execution（<span class="keyword">public</span> * com.jss.*.UserService.find*(*))</span><br></pre></td></tr></table></figure><p>（2）**..** ：多个连续的任意符号，可以独立出现，常用于简化包名与参数的书写</p><p>示例：匹配com包下的任意包中的UserService类或接口中所有名称为findById的方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xxxxxxxxxx execution（<span class="keyword">public</span> User com..UserService.findById(..))</span><br></pre></td></tr></table></figure><p>（3）**+**：专用于匹配子类类型</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">execution(* *..*Service+.*(..))</span><br></pre></td></tr></table></figure><p>（4）**+**：专用于匹配加了当前注解的</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@Pointcut(&quot;@annotation(cn.study.lu.controller.aop.annotation.TestAop)&quot;)</span><br></pre></td></tr></table></figure><h2 id="2-AOP通知类型"><a href="#2-AOP通知类型" class="headerlink" title="2.AOP通知类型"></a>2.AOP通知类型</h2><p>AOP通知共分为5种类型：</p><ul><li><p>前置通知：在切入点方法执行之前执行</p></li><li><p>后置通知：在切入点方法执行之后执行，无论切入点方法内部是否出现异常，后置通知都会执行。</p></li><li><p>&#x3D;&#x3D;环绕通知(重点)：&#x3D;&#x3D;手动调用切入点方法并对其进行增强的通知方式。</p></li><li><p>返回后通知(了解)：在切入点方法执行之后执行，如果切入点方法内部出现异常将不会执行。</p></li><li><p>抛出异常后通知(了解)：在切入点方法执行之后执行，只有当切入点方法内部出现异常之后才执行</p></li></ul><h2 id="3-Aop的DEMO"><a href="#3-Aop的DEMO" class="headerlink" title="3.Aop的DEMO"></a>3.Aop的DEMO</h2><p>首先加入使用aop的依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-aop<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="创建aop切面注解"><a href="#创建aop切面注解" class="headerlink" title="创建aop切面注解"></a>创建aop切面注解</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.study.lu.controller.aop.annotation;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.ElementType;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Retention;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.RetentionPolicy;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.Target;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Target(ElementType.METHOD)</span></span><br><span class="line"><span class="meta">@Retention(RetentionPolicy.RUNTIME)</span></span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> TestAop &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="创建aop切面类"><a href="#创建aop切面类" class="headerlink" title="创建aop切面类"></a>创建aop切面类</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.study.lu.controller.aop.aspect;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.JoinPoint;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.ProceedingJoinPoint;</span><br><span class="line"><span class="keyword">import</span> org.aspectj.lang.annotation.*;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Aspect</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ExampleAop</span> &#123;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">//切入点：增强标有@TestAop注解的方法</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Pointcut(&quot;@annotation(cn.study.lu.controller.aop.annotation.TestAop)&quot;)</span></span><br><span class="line">    <span class="comment">//切入点签名</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">pointcut</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;pointCut签名。。。&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">//前置通知</span></span><br><span class="line">    <span class="meta">@Before(&quot;pointcut()&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">deBefore</span><span class="params">(JoinPoint joinPoint)</span> <span class="keyword">throws</span> Throwable &#123;</span><br><span class="line">        log.info(<span class="string">&quot;前置通知被执行&quot;</span>);</span><br><span class="line">        <span class="comment">//可以joinpoint中得到命中方法的相关信息，利用这些信息可以做一些额外的业务操作；</span></span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">//返回通知</span></span><br><span class="line">    <span class="meta">@AfterReturning(returning = &quot;ret&quot;, pointcut = &quot;pointcut()&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doAfterReturning</span><span class="params">(Object ret)</span> <span class="keyword">throws</span> Throwable &#123;</span><br><span class="line">        log.info(<span class="string">&quot;返回通知被执行&quot;</span>);</span><br><span class="line">        <span class="comment">//可以joinpoint中得到命中方法的相关信息，利用这些信息可以做一些额外的业务操作；</span></span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">//异常通知</span></span><br><span class="line">    <span class="meta">@AfterThrowing(throwing = &quot;ex&quot;, pointcut = &quot;pointcut()&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">throwss</span><span class="params">(JoinPoint jp, Exception ex)</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;异常通知被执行&quot;</span>);</span><br><span class="line">        <span class="comment">//可以joinpoint中得到命中方法的相关信息，利用这些信息可以做一些额外的业务操作；</span></span><br><span class="line">        <span class="comment">//可以从ex中获取到具体的异常信息</span></span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">//后置通知</span></span><br><span class="line">    <span class="meta">@After(&quot;pointcut()&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">after</span><span class="params">(JoinPoint jp)</span> &#123;</span><br><span class="line">        log.info(<span class="string">&quot;后置通知被执行&quot;</span>);</span><br><span class="line">        <span class="comment">//可以joinpoint中得到命中方法的相关信息，利用这些信息可以做一些额外的业务操作；</span></span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="meta">@Around(&quot;pointcut()&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">around</span><span class="params">(ProceedingJoinPoint proceedingJoinPoint)</span> <span class="keyword">throws</span> Throwable &#123;</span><br><span class="line">        log.info(<span class="string">&quot;------环绕通知 start&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">methodName</span> <span class="operator">=</span> proceedingJoinPoint.getSignature().getName();</span><br><span class="line">        <span class="type">String</span> <span class="variable">className</span> <span class="operator">=</span> proceedingJoinPoint.getTarget().getClass().getName();</span><br><span class="line">        Object[] args = proceedingJoinPoint.getArgs();</span><br><span class="line">        <span class="type">String</span> <span class="variable">argsName</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">StringBuilder</span> <span class="variable">sb</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">        <span class="keyword">if</span> (args != <span class="literal">null</span> &amp;&amp; args.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; args.length; i++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (args[i] != <span class="literal">null</span>) &#123;</span><br><span class="line">                    sb.append(<span class="string">&quot;;&quot;</span>).append(args[i].getClass().getName());</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (sb.toString().length() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                argsName = sb.toString().substring(<span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        log.info(<span class="string">&quot;命中类：&#123;&#125;，方法&#123;&#125;，参数&#123;&#125;；&quot;</span>, className, methodName, argsName);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">proceed</span> <span class="operator">=</span> proceedingJoinPoint.proceed();</span><br><span class="line">        log.info(<span class="string">&quot;------环绕通知 end&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> proceed;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="在controller上加入该注解"><a href="#在controller上加入该注解" class="headerlink" title="在controller上加入该注解"></a>在controller上加入该注解</h4><p><img src="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311231553124.png"></p><h4 id="启动项目查看控制台是否生效"><a href="#启动项目查看控制台是否生效" class="headerlink" title="启动项目查看控制台是否生效"></a>启动项目查看控制台是否生效</h4><p><img src="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311231554414.png"></p><h4 id="测试成功-可根据实际业务拓展功能-详细版本待出"><a href="#测试成功-可根据实际业务拓展功能-详细版本待出" class="headerlink" title="测试成功  可根据实际业务拓展功能 详细版本待出"></a>测试成功  可根据实际业务拓展功能 详细版本待出</h4>]]></content>
      
      
      <categories>
          
          <category> Java配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java 配置 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mybatis-plus代码生成器</title>
      <link href="/posts/47374.html"/>
      <url>/posts/47374.html</url>
      
        <content type="html"><![CDATA[<p>MyBatis-Plus （简称 MP）是一个 MyBatis的增强工具，在 MyBatis 的基础上只做增强不做改变，为简化开发、提高效率而生。</p><h2 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h2><ul><li><strong>无侵入</strong>：只做增强不做改变，引入它不会对现有工程产生影响，如丝般顺滑</li><li><strong>损耗小</strong>：启动即会自动注入基本 CURD，性能基本无损耗，直接面向对象操作</li><li><strong>强大的 CRUD 操作</strong>：内置通用 Mapper、通用 Service，仅仅通过少量配置即可实现单表大部分 CRUD 操作，更有强大的条件构造器，满足各类使用需求</li><li><strong>支持 Lambda 形式调用</strong>：通过 Lambda 表达式，方便的编写各类查询条件，无需再担心字段写错</li><li><strong>支持主键自动生成</strong>：支持多达 4 种主键策略（内含分布式唯一 ID 生成器 - Sequence），可自由配置，完美解决主键问题</li><li><strong>支持 ActiveRecord 模式</strong>：支持 ActiveRecord 形式调用，实体类只需继承 Model 类即可进行强大的 CRUD 操作</li><li><strong>支持自定义全局通用操作</strong>：支持全局通用方法注入（ Write once, use anywhere ）</li><li><strong>内置代码生成器</strong>：采用代码或者 Maven 插件可快速生成 Mapper 、 Model 、 Service 、 Controller 层代码，支持模板引擎，更有超多自定义配置等您来使用</li><li><strong>内置分页插件</strong>：基于 MyBatis 物理分页，开发者无需关心具体操作，配置好插件之后，写分页等同于普通 List 查询</li><li><strong>分页插件支持多种数据库</strong>：支持 MySQL、MariaDB、Oracle、DB2、H2、HSQL、SQLite、Postgre、SQLServer 等多种数据库</li><li><strong>内置性能分析插件</strong>：可输出 SQL 语句以及其执行时间，建议开发测试时启用该功能，能快速揪出慢查询</li><li><strong>内置全局拦截插件</strong>：提供全表 delete 、 update 操作智能分析阻断，也可自定义拦截规则，预防误操作</li></ul><h2 id="支持数据库"><a href="#支持数据库" class="headerlink" title="支持数据库"></a>支持数据库</h2><blockquote><p>任何能使用 <code>MyBatis</code> 进行 CRUD, 并且支持标准 SQL 的数据库，具体支持情况如下，如果不在下列表查看分页部分教程 PR 您的支持。</p></blockquote><ul><li>MySQL，Oracle，DB2，H2，HSQL，SQLite，PostgreSQL，SQLServer，Phoenix，Gauss ，ClickHouse，Sybase，OceanBase，Firebird，Cubrid，Goldilocks，csiidb，informix，TDengine，redshift</li><li>达梦数据库，虚谷数据库，人大金仓数据库，南大通用(华库)数据库，南大通用数据库，神通数据库，瀚高数据库，优炫数据库，星瑞格数据库</li></ul><h2 id="框架结构"><a href="#框架结构" class="headerlink" title="框架结构"></a>框架结构</h2><p><img src="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311201113809.jpg"></p><h2 id="如何使用代码生成器"><a href="#如何使用代码生成器" class="headerlink" title="如何使用代码生成器"></a><strong>如何使用代码生成器</strong></h2><ul><li>首先在pom文件加入依赖 数据库驱动依赖有就不需要再加了</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- mybatis-plus--&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">     </span><br><span class="line">      <span class="comment">&lt;!--数据库驱动--&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.32<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">     </span><br><span class="line">        <span class="comment">&lt;!--        mybatis代码生成器--&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-generator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.4.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>创建配置类</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.study.generator;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.DbType;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.AutoGenerator;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.config.DataSourceConfig;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.config.GlobalConfig;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.config.PackageConfig;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.config.StrategyConfig;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.config.rules.NamingStrategy;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CodeGet</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1、创建代码生成器</span></span><br><span class="line">        <span class="type">AutoGenerator</span> <span class="variable">mpg</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AutoGenerator</span>();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2、全局配置</span></span><br><span class="line">        <span class="comment">// 全局配置</span></span><br><span class="line">        <span class="type">GlobalConfig</span> <span class="variable">gc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">GlobalConfig</span>();</span><br><span class="line">        <span class="comment">//根目录</span></span><br><span class="line">        gc.setOutputDir(<span class="string">&quot;D:\\Codes\\workspace\\study-Project\\study-admin\\&quot;</span>+<span class="string">&quot;/src/main/java&quot;</span>);</span><br><span class="line">        gc.setServiceName(<span class="string">&quot;%sService&quot;</span>);<span class="comment">//去掉Service接口的首字母I</span></span><br><span class="line">        gc.setAuthor(<span class="string">&quot;Lu&quot;</span>);<span class="comment">//作者</span></span><br><span class="line">        gc.setOpen(<span class="literal">false</span>);</span><br><span class="line">        mpg.setGlobalConfig(gc);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3、数据源配置</span></span><br><span class="line">        <span class="type">DataSourceConfig</span> <span class="variable">dsc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DataSourceConfig</span>();</span><br><span class="line">        dsc.setUrl(<span class="string">&quot;jdbc:mysql://localhost:3306/study?serverTimezone=GMT%2B8&amp;useSSL=false&quot;</span>);</span><br><span class="line">        dsc.setDriverName(<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>);</span><br><span class="line">        dsc.setUsername(<span class="string">&quot;root&quot;</span>);<span class="comment">//数据库账号</span></span><br><span class="line">        dsc.setPassword(<span class="string">&quot;Lxx@123&quot;</span>);<span class="comment">//数据库密码</span></span><br><span class="line">        dsc.setDbType(DbType.MYSQL);</span><br><span class="line">        mpg.setDataSource(dsc);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4、包配置</span></span><br><span class="line">        <span class="type">PackageConfig</span> <span class="variable">pc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PackageConfig</span>();</span><br><span class="line">        pc.setParent(<span class="string">&quot;cn.study.lu&quot;</span>);</span><br><span class="line"><span class="comment">//        pc.setModuleName(&quot;process&quot;); //模块名</span></span><br><span class="line">        pc.setController(<span class="string">&quot;controller.mp&quot;</span>);</span><br><span class="line">        pc.setService(<span class="string">&quot;service&quot;</span>);</span><br><span class="line">        pc.setMapper(<span class="string">&quot;mapper&quot;</span>);</span><br><span class="line">        mpg.setPackageInfo(pc);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 5、策略配置</span></span><br><span class="line">        <span class="type">StrategyConfig</span> <span class="variable">strategy</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StrategyConfig</span>();</span><br><span class="line"></span><br><span class="line">        strategy.setInclude(<span class="string">&quot;payroll&quot;</span>);<span class="comment">//表名</span></span><br><span class="line"></span><br><span class="line">        strategy.setNaming(NamingStrategy.underline_to_camel);<span class="comment">//数据库表映射到实体的命名策略</span></span><br><span class="line"></span><br><span class="line">        strategy.setColumnNaming(NamingStrategy.underline_to_camel);<span class="comment">//数据库表字段映射到实体的命名策略</span></span><br><span class="line">        strategy.setEntityLombokModel(<span class="literal">true</span>); <span class="comment">// lombok 模型 @Accessors(chain = true) setter链式操作</span></span><br><span class="line"></span><br><span class="line">        strategy.setRestControllerStyle(<span class="literal">true</span>); <span class="comment">//restful api风格控制器</span></span><br><span class="line">        strategy.setControllerMappingHyphenStyle(<span class="literal">true</span>); <span class="comment">//url中驼峰转连字符</span></span><br><span class="line"></span><br><span class="line">        mpg.setStrategy(strategy);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 6、执行</span></span><br><span class="line">        mpg.execute();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>需要注意的地方  此处的名称需要保持一致</li></ul><p><img src="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311201124709.png"></p><p><img src="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311201124492.png"></p><ul><li>启动创建的类 便会自动生成代码</li></ul><p><img src="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311201128616.png"></p><p><img src="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311201128697.png"></p><ul><li>测试代码生成器的代码是否能够正常运行 启动项目进行测试</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.study.lu.controller.mp;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.study.common.result.JsonResult;</span><br><span class="line"><span class="keyword">import</span> cn.study.common.result.ResultEntity;</span><br><span class="line"><span class="keyword">import</span> cn.study.lu.entity.MpTest;</span><br><span class="line"><span class="keyword">import</span> cn.study.lu.service.MpTestService;</span><br><span class="line"><span class="keyword">import</span> io.swagger.annotations.ApiOperation;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> *  前端控制器</span></span><br><span class="line"><span class="comment"> * &lt;/p&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Lu</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2023-11-20</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/mp-test&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MpTestController</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> MpTestService mpTestService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping(&quot;list&quot;)</span></span><br><span class="line">    <span class="meta">@ApiOperation(&quot;测试mp&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ResultEntity <span class="title function_">test</span><span class="params">()</span>&#123;</span><br><span class="line">        List&lt;MpTest&gt; list = mpTestService.list();</span><br><span class="line">        <span class="keyword">return</span> JsonResult.success(list);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>测试结果</li></ul><p><img src="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311201344684.png"></p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -SQL -便捷 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>递归</title>
      <link href="/posts/38362.html"/>
      <url>/posts/38362.html</url>
      
        <content type="html"><![CDATA[<h2 id="主要介绍工作中需要将数据库中的数据处理成树形结构"><a href="#主要介绍工作中需要将数据库中的数据处理成树形结构" class="headerlink" title="主要介绍工作中需要将数据库中的数据处理成树形结构"></a>主要介绍工作中需要将数据库中的数据处理成树形结构</h2><h5 id="SQL脚本"><a href="#SQL脚本" class="headerlink" title="SQL脚本"></a>SQL脚本</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">SET NAMES utf8mb4;</span><br><span class="line"><span class="type">SET</span> <span class="variable">FOREIGN_KEY_CHECKS</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">-- ----------------------------</span><br><span class="line">-- Table structure <span class="keyword">for</span> category</span><br><span class="line">-- ----------------------------</span><br><span class="line">DROP TABLE IF EXISTS `category`;</span><br><span class="line">CREATE TABLE `category`  (</span><br><span class="line">  `id` <span class="type">int</span> NOT NULL AUTO_INCREMENT COMMENT <span class="string">&#x27;主键ID&#x27;</span>,</span><br><span class="line">  `name` varchar(<span class="number">255</span>) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT <span class="string">&#x27;商品分类名称&#x27;</span>,</span><br><span class="line">  `inventory` varchar(<span class="number">255</span>) CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci NULL DEFAULT NULL COMMENT <span class="string">&#x27;库存&#x27;</span>,</span><br><span class="line">  `pid` <span class="type">int</span> NULL DEFAULT NULL COMMENT <span class="string">&#x27;上级ID&#x27;</span>,</span><br><span class="line">  PRIMARY <span class="title function_">KEY</span> <span class="params">(`id`)</span> USING BTREE</span><br><span class="line">) ENGINE = <span class="type">InnoDB</span> <span class="variable">AUTO_INCREMENT</span> <span class="operator">=</span> <span class="number">68</span> <span class="type">CHARACTER</span> <span class="variable">SET</span> <span class="operator">=</span> <span class="type">utf8mb4</span> <span class="variable">COLLATE</span> <span class="operator">=</span> <span class="type">utf8mb4_0900_ai_ci</span> <span class="variable">ROW_FORMAT</span> <span class="operator">=</span> DYNAMIC;</span><br><span class="line"></span><br><span class="line">-- ----------------------------</span><br><span class="line">-- Records of category</span><br><span class="line">-- ----------------------------</span><br><span class="line">INSERT INTO `category` VALUES (<span class="number">1</span>, <span class="string">&#x27;手机数码&#x27;</span>, <span class="string">&#x27;5000&#x27;</span>, NULL);</span><br><span class="line">INSERT INTO `category` VALUES (<span class="number">2</span>, <span class="string">&#x27;小米&#x27;</span>, <span class="string">&#x27;2000&#x27;</span>, <span class="number">1</span>);</span><br><span class="line">INSERT INTO `category` VALUES (<span class="number">3</span>, <span class="string">&#x27;华为&#x27;</span>, <span class="string">&#x27;2000&#x27;</span>, <span class="number">1</span>);</span><br><span class="line">INSERT INTO `category` VALUES (<span class="number">4</span>, <span class="string">&#x27;努比亚&#x27;</span>, <span class="string">&#x27;1000&#x27;</span>, <span class="number">1</span>);</span><br><span class="line">INSERT INTO `category` VALUES (<span class="number">5</span>, <span class="string">&#x27;休闲零食&#x27;</span>, <span class="string">&#x27;8000&#x27;</span>, NULL);</span><br><span class="line">INSERT INTO `category` VALUES (<span class="number">6</span>, <span class="string">&#x27;薯片&#x27;</span>, <span class="string">&#x27;1000&#x27;</span>, <span class="number">5</span>);</span><br><span class="line">INSERT INTO `category` VALUES (<span class="number">7</span>, <span class="string">&#x27;糖果&#x27;</span>, <span class="string">&#x27;3000&#x27;</span>, <span class="number">5</span>);</span><br><span class="line">INSERT INTO `category` VALUES (<span class="number">8</span>, <span class="string">&#x27;果干&#x27;</span>, <span class="string">&#x27;1000&#x27;</span>, <span class="number">5</span>);</span><br><span class="line">INSERT INTO `category` VALUES (<span class="number">9</span>, <span class="string">&#x27;辣条&#x27;</span>, <span class="string">&#x27;2000&#x27;</span>, <span class="number">5</span>);</span><br><span class="line">INSERT INTO `category` VALUES (<span class="number">10</span>, <span class="string">&#x27;花生&#x27;</span>, <span class="string">&#x27;1000&#x27;</span>, <span class="number">5</span>);</span><br><span class="line">INSERT INTO `category` VALUES (<span class="number">11</span>, <span class="string">&#x27;酒水饮料&#x27;</span>, <span class="string">&#x27;10000&#x27;</span>, NULL);</span><br><span class="line">INSERT INTO `category` VALUES (<span class="number">12</span>, <span class="string">&#x27;白酒&#x27;</span>, <span class="string">&#x27;4000&#x27;</span>, <span class="number">11</span>);</span><br><span class="line">INSERT INTO `category` VALUES (<span class="number">13</span>, <span class="string">&#x27;啤酒&#x27;</span>, <span class="string">&#x27;3000&#x27;</span>, <span class="number">11</span>);</span><br><span class="line">INSERT INTO `category` VALUES (<span class="number">14</span>, <span class="string">&#x27;红酒&#x27;</span>, <span class="string">&#x27;3000&#x27;</span>, <span class="number">11</span>);</span><br><span class="line">INSERT INTO `category` VALUES (<span class="number">15</span>, <span class="string">&#x27;口子窖&#x27;</span>, <span class="string">&#x27;300&#x27;</span>, <span class="number">12</span>);</span><br><span class="line">INSERT INTO `category` VALUES (<span class="number">16</span>, <span class="string">&#x27;茅台&#x27;</span>, <span class="string">&#x27;1000&#x27;</span>, <span class="number">12</span>);</span><br><span class="line">INSERT INTO `category` VALUES (<span class="number">17</span>, <span class="string">&#x27;古井贡酒&#x27;</span>, <span class="string">&#x27;2000&#x27;</span>, <span class="number">12</span>);</span><br><span class="line">INSERT INTO `category` VALUES (<span class="number">18</span>, <span class="string">&#x27;稻花香&#x27;</span>, <span class="string">&#x27;700&#x27;</span>, <span class="number">12</span>);</span><br><span class="line">INSERT INTO `category` VALUES (<span class="number">19</span>, <span class="string">&#x27;青岛啤酒&#x27;</span>, <span class="string">&#x27;1000&#x27;</span>, <span class="number">13</span>);</span><br><span class="line">INSERT INTO `category` VALUES (<span class="number">20</span>, <span class="string">&#x27;燕京啤酒&#x27;</span>, <span class="string">&#x27;1500&#x27;</span>, <span class="number">13</span>);</span><br><span class="line">INSERT INTO `category` VALUES (<span class="number">21</span>, <span class="string">&#x27;黑啤&#x27;</span>, <span class="string">&#x27;500&#x27;</span>, <span class="number">13</span>);</span><br><span class="line"></span><br><span class="line"><span class="type">SET</span> <span class="variable">FOREIGN_KEY_CHECKS</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="创建对应的实体类"><a href="#创建对应的实体类" class="headerlink" title="创建对应的实体类"></a>创建对应的实体类</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.study.model.entity.mp;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.IdType;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.TableField;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.TableId;</span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * &lt;/p&gt;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Lu</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span> 2023-11-02</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@Builder</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@EqualsAndHashCode(callSuper = false)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Category</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 主键ID</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">      <span class="meta">@TableId(value = &quot;id&quot;, type = IdType.AUTO)</span></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 商品分类名称</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 库存</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> String inventory;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 上级ID</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer pid;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@TableField(exist = false)</span></span><br><span class="line">    List&lt;Category&gt; childrenList;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="创建控制层"><a href="#创建控制层" class="headerlink" title="创建控制层"></a>创建控制层</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.study.lu.controller.common;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.study.lu.service.FileUploadService;</span><br><span class="line"><span class="keyword">import</span> cn.study.common.enmu.JsonResponse;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.study.model.dto.lu.CategoryReverseRecursionDto;</span><br><span class="line"><span class="keyword">import</span> cn.study.model.entity.mp.Category;</span><br><span class="line"><span class="keyword">import</span> io.swagger.annotations.Api;</span><br><span class="line"><span class="keyword">import</span> io.swagger.annotations.ApiOperation;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.multipart.MultipartFile;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/admin/common&quot;)</span></span><br><span class="line"><span class="meta">@Api(tags = &quot;公共模块&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CommonController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> CommonService commonService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping(value = &quot;/recursion&quot;)</span></span><br><span class="line">    <span class="meta">@ApiOperation(&quot;递归&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> JsonResponse <span class="title function_">recursion</span><span class="params">()</span> &#123;</span><br><span class="line">        List&lt;Category&gt; recursion = fileUploadService.recursion();</span><br><span class="line">        <span class="keyword">return</span> JsonResponse.success(recursion) ;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="业务层"><a href="#业务层" class="headerlink" title="业务层"></a>业务层</h5><ul><li><h5 id="此处使用了mybatis-plus的代码生成器-直接调用selectList-null-即可"><a href="#此处使用了mybatis-plus的代码生成器-直接调用selectList-null-即可" class="headerlink" title="此处使用了mybatis-plus的代码生成器  直接调用selectList(null)即可"></a>此处使用了mybatis-plus的代码生成器  直接调用selectList(null)即可</h5></li><li><h5 id="实际可根据自己业务自行编写sql语句-下期附上代码生成器文章"><a href="#实际可根据自己业务自行编写sql语句-下期附上代码生成器文章" class="headerlink" title="实际可根据自己业务自行编写sql语句(下期附上代码生成器文章)"></a>实际可根据自己业务自行编写sql语句(下期附上代码生成器文章)</h5></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//接口</span></span><br><span class="line"><span class="keyword">package</span> cn.study.lu.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.study.model.dto.lu.CategoryReverseRecursionDto;</span><br><span class="line"><span class="keyword">import</span> cn.study.model.entity.mp.Category;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">CommonService</span> &#123;</span><br><span class="line">    List&lt;Category&gt; <span class="title function_">recursion</span><span class="params">()</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"><span class="comment">//实现</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> cn.study.lu.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.study.lu.mapper.CategoryMapper;</span><br><span class="line"><span class="keyword">import</span> cn.study.lu.service.CommonService;</span><br><span class="line"><span class="keyword">import</span> cn.study.model.dto.lu.CategoryReverseRecursionDto;</span><br><span class="line"><span class="keyword">import</span> cn.study.model.entity.mp.Category;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Objects;</span><br><span class="line"><span class="keyword">import</span> java.util.stream.Collectors;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CommonServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">CommonService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> CategoryMapper categoryMapper;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;Category&gt; <span class="title function_">recursion</span><span class="params">()</span> &#123;</span><br><span class="line">        List&lt;Category&gt; categoryList = categoryMapper.selectList(<span class="literal">null</span>);</span><br><span class="line">        List&lt;Category&gt; recursionList = categoryList.stream().filter(category -&gt; category.getPid() == <span class="literal">null</span>).map((category) -&gt; &#123;</span><br><span class="line">            category.setChildrenList(getChildren(category, categoryList));</span><br><span class="line">            <span class="keyword">return</span> category;</span><br><span class="line">        &#125;).collect(Collectors.toList());</span><br><span class="line">        <span class="keyword">return</span> recursionList;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 递归查询子节点</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> root 根节点</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> categoryList  所有节点</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 根节点信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;Category&gt; <span class="title function_">getChildren</span><span class="params">(Category root, List&lt;Category&gt; categoryList)</span> &#123;</span><br><span class="line">        List&lt;Category&gt; children = categoryList.stream().filter(category -&gt; &#123;</span><br><span class="line">            <span class="keyword">return</span> Objects.equals(category.getPid(), root.getId());</span><br><span class="line">        &#125;).map(</span><br><span class="line">                (c) -&gt; &#123;</span><br><span class="line">                    c.setChildrenList(getChildren(c, categoryList));</span><br><span class="line">                    <span class="keyword">return</span> c;</span><br><span class="line">                &#125;</span><br><span class="line">        ).collect(Collectors.toList());</span><br><span class="line">        <span class="keyword">return</span> children;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="启动项目进行测试-最后结构"><a href="#启动项目进行测试-最后结构" class="headerlink" title="启动项目进行测试   最后结构"></a>启动项目进行测试   最后结构</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;code&quot;</span>: <span class="number">200</span>,</span><br><span class="line">  <span class="string">&quot;message&quot;</span>: <span class="string">&quot;操作成功！&quot;</span>,</span><br><span class="line">  <span class="string">&quot;data&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;id&quot;</span>: <span class="number">1</span>,</span><br><span class="line">      <span class="string">&quot;name&quot;</span>: <span class="string">&quot;手机数码&quot;</span>,</span><br><span class="line">      <span class="string">&quot;inventory&quot;</span>: <span class="string">&quot;5000&quot;</span>,</span><br><span class="line">      <span class="string">&quot;pid&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">      <span class="string">&quot;childrenList&quot;</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="string">&quot;id&quot;</span>: <span class="number">2</span>,</span><br><span class="line">          <span class="string">&quot;name&quot;</span>: <span class="string">&quot;小米&quot;</span>,</span><br><span class="line">          <span class="string">&quot;inventory&quot;</span>: <span class="string">&quot;2000&quot;</span>,</span><br><span class="line">          <span class="string">&quot;pid&quot;</span>: <span class="number">1</span>,</span><br><span class="line">          <span class="string">&quot;childrenList&quot;</span>: []</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="string">&quot;id&quot;</span>: <span class="number">3</span>,</span><br><span class="line">          <span class="string">&quot;name&quot;</span>: <span class="string">&quot;华为&quot;</span>,</span><br><span class="line">          <span class="string">&quot;inventory&quot;</span>: <span class="string">&quot;2000&quot;</span>,</span><br><span class="line">          <span class="string">&quot;pid&quot;</span>: <span class="number">1</span>,</span><br><span class="line">          <span class="string">&quot;childrenList&quot;</span>: []</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="string">&quot;id&quot;</span>: <span class="number">4</span>,</span><br><span class="line">          <span class="string">&quot;name&quot;</span>: <span class="string">&quot;努比亚&quot;</span>,</span><br><span class="line">          <span class="string">&quot;inventory&quot;</span>: <span class="string">&quot;1000&quot;</span>,</span><br><span class="line">          <span class="string">&quot;pid&quot;</span>: <span class="number">1</span>,</span><br><span class="line">          <span class="string">&quot;childrenList&quot;</span>: []</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;id&quot;</span>: <span class="number">5</span>,</span><br><span class="line">      <span class="string">&quot;name&quot;</span>: <span class="string">&quot;休闲零食&quot;</span>,</span><br><span class="line">      <span class="string">&quot;inventory&quot;</span>: <span class="string">&quot;8000&quot;</span>,</span><br><span class="line">      <span class="string">&quot;pid&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">      <span class="string">&quot;childrenList&quot;</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="string">&quot;id&quot;</span>: <span class="number">6</span>,</span><br><span class="line">          <span class="string">&quot;name&quot;</span>: <span class="string">&quot;薯片&quot;</span>,</span><br><span class="line">          <span class="string">&quot;inventory&quot;</span>: <span class="string">&quot;1000&quot;</span>,</span><br><span class="line">          <span class="string">&quot;pid&quot;</span>: <span class="number">5</span>,</span><br><span class="line">          <span class="string">&quot;childrenList&quot;</span>: []</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="string">&quot;id&quot;</span>: <span class="number">7</span>,</span><br><span class="line">          <span class="string">&quot;name&quot;</span>: <span class="string">&quot;糖果&quot;</span>,</span><br><span class="line">          <span class="string">&quot;inventory&quot;</span>: <span class="string">&quot;3000&quot;</span>,</span><br><span class="line">          <span class="string">&quot;pid&quot;</span>: <span class="number">5</span>,</span><br><span class="line">          <span class="string">&quot;childrenList&quot;</span>: []</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="string">&quot;id&quot;</span>: <span class="number">8</span>,</span><br><span class="line">          <span class="string">&quot;name&quot;</span>: <span class="string">&quot;果干&quot;</span>,</span><br><span class="line">          <span class="string">&quot;inventory&quot;</span>: <span class="string">&quot;1000&quot;</span>,</span><br><span class="line">          <span class="string">&quot;pid&quot;</span>: <span class="number">5</span>,</span><br><span class="line">          <span class="string">&quot;childrenList&quot;</span>: []</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="string">&quot;id&quot;</span>: <span class="number">9</span>,</span><br><span class="line">          <span class="string">&quot;name&quot;</span>: <span class="string">&quot;辣条&quot;</span>,</span><br><span class="line">          <span class="string">&quot;inventory&quot;</span>: <span class="string">&quot;2000&quot;</span>,</span><br><span class="line">          <span class="string">&quot;pid&quot;</span>: <span class="number">5</span>,</span><br><span class="line">          <span class="string">&quot;childrenList&quot;</span>: []</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="string">&quot;id&quot;</span>: <span class="number">10</span>,</span><br><span class="line">          <span class="string">&quot;name&quot;</span>: <span class="string">&quot;花生&quot;</span>,</span><br><span class="line">          <span class="string">&quot;inventory&quot;</span>: <span class="string">&quot;1000&quot;</span>,</span><br><span class="line">          <span class="string">&quot;pid&quot;</span>: <span class="number">5</span>,</span><br><span class="line">          <span class="string">&quot;childrenList&quot;</span>: []</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;id&quot;</span>: <span class="number">11</span>,</span><br><span class="line">      <span class="string">&quot;name&quot;</span>: <span class="string">&quot;酒水饮料&quot;</span>,</span><br><span class="line">      <span class="string">&quot;inventory&quot;</span>: <span class="string">&quot;10000&quot;</span>,</span><br><span class="line">      <span class="string">&quot;pid&quot;</span>: <span class="literal">null</span>,</span><br><span class="line">      <span class="string">&quot;childrenList&quot;</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="string">&quot;id&quot;</span>: <span class="number">12</span>,</span><br><span class="line">          <span class="string">&quot;name&quot;</span>: <span class="string">&quot;白酒&quot;</span>,</span><br><span class="line">          <span class="string">&quot;inventory&quot;</span>: <span class="string">&quot;4000&quot;</span>,</span><br><span class="line">          <span class="string">&quot;pid&quot;</span>: <span class="number">11</span>,</span><br><span class="line">          <span class="string">&quot;childrenList&quot;</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="string">&quot;id&quot;</span>: <span class="number">15</span>,</span><br><span class="line">              <span class="string">&quot;name&quot;</span>: <span class="string">&quot;口子窖&quot;</span>,</span><br><span class="line">              <span class="string">&quot;inventory&quot;</span>: <span class="string">&quot;300&quot;</span>,</span><br><span class="line">              <span class="string">&quot;pid&quot;</span>: <span class="number">12</span>,</span><br><span class="line">              <span class="string">&quot;childrenList&quot;</span>: []</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="string">&quot;id&quot;</span>: <span class="number">16</span>,</span><br><span class="line">              <span class="string">&quot;name&quot;</span>: <span class="string">&quot;茅台&quot;</span>,</span><br><span class="line">              <span class="string">&quot;inventory&quot;</span>: <span class="string">&quot;1000&quot;</span>,</span><br><span class="line">              <span class="string">&quot;pid&quot;</span>: <span class="number">12</span>,</span><br><span class="line">              <span class="string">&quot;childrenList&quot;</span>: []</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="string">&quot;id&quot;</span>: <span class="number">17</span>,</span><br><span class="line">              <span class="string">&quot;name&quot;</span>: <span class="string">&quot;古井贡酒&quot;</span>,</span><br><span class="line">              <span class="string">&quot;inventory&quot;</span>: <span class="string">&quot;2000&quot;</span>,</span><br><span class="line">              <span class="string">&quot;pid&quot;</span>: <span class="number">12</span>,</span><br><span class="line">              <span class="string">&quot;childrenList&quot;</span>: []</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="string">&quot;id&quot;</span>: <span class="number">18</span>,</span><br><span class="line">              <span class="string">&quot;name&quot;</span>: <span class="string">&quot;稻花香&quot;</span>,</span><br><span class="line">              <span class="string">&quot;inventory&quot;</span>: <span class="string">&quot;700&quot;</span>,</span><br><span class="line">              <span class="string">&quot;pid&quot;</span>: <span class="number">12</span>,</span><br><span class="line">              <span class="string">&quot;childrenList&quot;</span>: []</span><br><span class="line">            &#125;</span><br><span class="line">          ]</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="string">&quot;id&quot;</span>: <span class="number">13</span>,</span><br><span class="line">          <span class="string">&quot;name&quot;</span>: <span class="string">&quot;啤酒&quot;</span>,</span><br><span class="line">          <span class="string">&quot;inventory&quot;</span>: <span class="string">&quot;3000&quot;</span>,</span><br><span class="line">          <span class="string">&quot;pid&quot;</span>: <span class="number">11</span>,</span><br><span class="line">          <span class="string">&quot;childrenList&quot;</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="string">&quot;id&quot;</span>: <span class="number">19</span>,</span><br><span class="line">              <span class="string">&quot;name&quot;</span>: <span class="string">&quot;青岛啤酒&quot;</span>,</span><br><span class="line">              <span class="string">&quot;inventory&quot;</span>: <span class="string">&quot;1000&quot;</span>,</span><br><span class="line">              <span class="string">&quot;pid&quot;</span>: <span class="number">13</span>,</span><br><span class="line">              <span class="string">&quot;childrenList&quot;</span>: []</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="string">&quot;id&quot;</span>: <span class="number">20</span>,</span><br><span class="line">              <span class="string">&quot;name&quot;</span>: <span class="string">&quot;燕京啤酒&quot;</span>,</span><br><span class="line">              <span class="string">&quot;inventory&quot;</span>: <span class="string">&quot;1500&quot;</span>,</span><br><span class="line">              <span class="string">&quot;pid&quot;</span>: <span class="number">13</span>,</span><br><span class="line">              <span class="string">&quot;childrenList&quot;</span>: []</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">              <span class="string">&quot;id&quot;</span>: <span class="number">21</span>,</span><br><span class="line">              <span class="string">&quot;name&quot;</span>: <span class="string">&quot;黑啤&quot;</span>,</span><br><span class="line">              <span class="string">&quot;inventory&quot;</span>: <span class="string">&quot;500&quot;</span>,</span><br><span class="line">              <span class="string">&quot;pid&quot;</span>: <span class="number">13</span>,</span><br><span class="line">              <span class="string">&quot;childrenList&quot;</span>: []</span><br><span class="line">            &#125;</span><br><span class="line">          ]</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="string">&quot;id&quot;</span>: <span class="number">14</span>,</span><br><span class="line">          <span class="string">&quot;name&quot;</span>: <span class="string">&quot;红酒&quot;</span>,</span><br><span class="line">          <span class="string">&quot;inventory&quot;</span>: <span class="string">&quot;3000&quot;</span>,</span><br><span class="line">          <span class="string">&quot;pid&quot;</span>: <span class="number">11</span>,</span><br><span class="line">          <span class="string">&quot;childrenList&quot;</span>: []</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 递归 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>listary工具</title>
      <link href="/posts/53714.html"/>
      <url>/posts/53714.html</url>
      
        <content type="html"><![CDATA[<h3 id="工具介绍"><a href="#工具介绍" class="headerlink" title="工具介绍"></a>工具介绍</h3><p>Listary是一款实用的搜索工具。它能给“我的电脑“（资源管理器）加上许多智能命令，含有收藏文件夹，快速打开最近浏览的文件夹，快速显示&#x2F;隐藏文件扩展名等等实用功能。能大大提高用户日常收藏和整理文件的效率。</p><h3 id="下载地址-https-www-listary-com"><a href="#下载地址-https-www-listary-com" class="headerlink" title="下载地址: https://www.listary.com/"></a>下载地址: <a href="https://www.listary.com/">https://www.listary.com/</a></h3><p><img src="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311161709114.png"></p><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><ul><li>双击两个Ctrl键就会出来搜索框</li></ul><p><img src="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311161711624.png"></p><ul><li>此外这个工具还能对系统不能修改的文件进行修改 咱不演示</li></ul>]]></content>
      
      
      <categories>
          
          <category> 实用工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
            <tag> 搜索 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo+PicGo+阿里云构成图床</title>
      <link href="/posts/52812.html"/>
      <url>/posts/52812.html</url>
      
        <content type="html"><![CDATA[<h3 id="Picgo图床"><a href="#Picgo图床" class="headerlink" title="Picgo图床"></a>Picgo图床</h3><p>PicGo是一款比较优秀的图床工具。它是一款用 Electron-vue 开发的软件，可以支持微博，七牛云，腾讯云COS，又拍云，GitHub，阿里云OSS，SM.MS，imgur 等8种常用图床，功能强大，简单易用</p><p>一般如果不使用图床，你的图片会存放在_post的文章文件夹内，这对于博客迁移来说是非常不方便的，所以依旧是借助github的托管来做一个图床</p><p>Picgo下载:<a href="https://github.com/Molunerfinn/PicGo/releases">https://github.com/Molunerfinn/PicGo/releases</a><br><img src="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311161609584.png"></p><p>进行下载安装一路打√即可</p><h3 id="阿里云对象储能OSS"><a href="#阿里云对象储能OSS" class="headerlink" title="阿里云对象储能OSS"></a>阿里云对象储能OSS</h3><ul><li>进入阿里云点击右上角控制台进入工作台</li><li>搜索对象储能OSS  首次使用免费使用三个月 后续使用自己续费即可</li><li>购买完成以后进入对象储存OSS页面  点击Bucket 列表并创建</li></ul><p><img src="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311161619057.png"></p><ul><li>按照我给的图进行配置并完成创建</li></ul><p><img src="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311161614333.png"></p><ul><li>创建完成以后点击右上角头像  在点击AccessKey管理进入页面</li></ul><p><img src="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311161625298.png"></p><ul><li>若没有自己创建一下即可   创建完成时会生成id和keySecret  切记一定要保存下来(后面会用)</li></ul><h3 id="进行图床的配置"><a href="#进行图床的配置" class="headerlink" title="进行图床的配置"></a>进行图床的配置</h3><ul><li>打开PicGo软件</li></ul><p><img src="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311161631540.png"></p><ul><li>特别注意存储区域 若注册是北京 则对应是:oss-cn-beijing</li></ul><p><img src="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311161631525.png"></p><ul><li>完成以上配置便可以测试一下能否使用  点击上传测试</li></ul><p><img src="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311161634365.png"></p><ul><li>当点击上传后能提示上传成功或在相册能够查看即可</li></ul><p><img src="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311161634783.png"></p><ul><li>最后就是typora的设置</li></ul><p><img src="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311161639297.png"></p><ul><li>后续上传图片</li></ul><p><img src="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311161640971.png"></p><ul><li>点击包的图片上传本地文件就会自动推到OSS的仓库中</li></ul><p><img src="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311161642943.png"></p><ul><li><p>进入到OSS的仓库中进入xxx&#x2F;bolg中查看</p><p><img src="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311161643588.png"></p></li></ul><h3 id="大概步骤如上-如有其他不明白的地方私信即可"><a href="#大概步骤如上-如有其他不明白的地方私信即可" class="headerlink" title="大概步骤如上 如有其他不明白的地方私信即可"></a>大概步骤如上 如有其他不明白的地方私信即可</h3>]]></content>
      
      
      <categories>
          
          <category> hexo配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置 </tag>
            
            <tag> 阿里云 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows安装minio</title>
      <link href="/posts/18206.html"/>
      <url>/posts/18206.html</url>
      
        <content type="html"><![CDATA[<h3 id="推荐给不想花钱把图片储存在阿里云的小伙伴-介绍一下Minio"><a href="#推荐给不想花钱把图片储存在阿里云的小伙伴-介绍一下Minio" class="headerlink" title="推荐给不想花钱把图片储存在阿里云的小伙伴  介绍一下Minio"></a>推荐给不想花钱把图片储存在阿里云的小伙伴  介绍一下Minio</h3><ul><li>官网下载地址: <a href="https://links.jianshu.com/go?to=https://dl.minio.io/server/minio/release/windows-amd64/minio.exe">https://dl.minio.io/server/minio/release/windows-amd64/minio.exe</a></li><li>推荐创建一个英文路径的文件夹把minio软件放在文件夹中</li></ul><p>​       在根目录输入cmd进入窗口输入minio.exe server +所在盘符路径</p><p><img src="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311161523481.png"></p><ul><li>在浏览器输入当前访问地址 账号密码默认minioadmin</li><li>但当前配置会出现每次使用minio都需要使用命令启动相对麻烦</li><li>所以推荐一种配置到电脑服务中进行自启</li></ul><ol><li>下载winsw，下载地址：<a href="https://github.com/winsw/winsw/releases">Releases · winsw&#x2F;winsw · GitHub</a></li></ol><p>待完成!!!</p><h3 id="springboot整合minio"><a href="#springboot整合minio" class="headerlink" title="springboot整合minio"></a>springboot整合minio</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.minio<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>minio<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>7.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p>在yml文件中配置minio</p> <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">minio:</span></span><br><span class="line">  <span class="attr">accessKey:</span> <span class="string">minioadmin</span></span><br><span class="line">  <span class="attr">secretKey:</span> <span class="string">minioadmin</span></span><br><span class="line">  <span class="attr">bucket:</span> <span class="string">study-product</span></span><br><span class="line">  <span class="attr">endpoint:</span> <span class="string">http://localhost:9000</span></span><br></pre></td></tr></table></figure></li><li><p>创建对应调用的实体类  需注意的是读取节点需根据自己项目调整 </p></li><li><p>若在Spring下 则prefix&#x3D;”spring.minio”</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.study.lu.controller.properties;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.context.properties.ConfigurationProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@ConfigurationProperties(prefix=&quot;minio&quot;)</span> <span class="comment">//读取节点</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MinioProperties</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String endpoint;</span><br><span class="line">    <span class="keyword">private</span> String accessKey;</span><br><span class="line">    <span class="keyword">private</span> String secretKey;</span><br><span class="line">    <span class="keyword">private</span> String bucket;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>创建对应的controller 建议放在common模块下</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.study.lu.controller.common;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.study.lu.service.FileUploadService;</span><br><span class="line"><span class="keyword">import</span> cn.study.common.enmu.JsonResponse;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.study.model.dto.lu.CategoryReverseRecursionDto;</span><br><span class="line"><span class="keyword">import</span> cn.study.model.entity.mp.Category;</span><br><span class="line"><span class="keyword">import</span> io.swagger.annotations.Api;</span><br><span class="line"><span class="keyword">import</span> io.swagger.annotations.ApiOperation;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.multipart.MultipartFile;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/admin/common&quot;)</span></span><br><span class="line"><span class="meta">@Api(tags = &quot;公共模块&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CommonController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> FileUploadService fileUploadService ;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping(value = &quot;/upload&quot;)</span></span><br><span class="line">    <span class="meta">@ApiOperation(&quot;图片上传minio&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> JsonResponse&lt;String&gt; <span class="title function_">fileUploadService</span><span class="params">(<span class="meta">@RequestParam(value = &quot;file&quot;)</span> MultipartFile multipartFile)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">fileUrl</span> <span class="operator">=</span> fileUploadService.fileUpload(multipartFile) ;</span><br><span class="line">        <span class="keyword">return</span> JsonResponse.success(fileUrl) ;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ul><li>创建对应的service和serviceimpl   注意创建的实体类需要注入业务层</li><li>提醒:在图片上传成功我把图片添加到了数据库  自己使用时可删除</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.study.lu.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.study.model.dto.lu.CategoryReverseRecursionDto;</span><br><span class="line"><span class="keyword">import</span> cn.study.model.entity.mp.Category;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.multipart.MultipartFile;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">FileUploadService</span> &#123;</span><br><span class="line">    String <span class="title function_">fileUpload</span><span class="params">(MultipartFile multipartFile)</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//业务层</span></span><br><span class="line"><span class="keyword">package</span> cn.study.lu.service.impl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.hutool.core.date.DateUtil;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.study.lu.controller.properties.MinioProperties;</span><br><span class="line"><span class="keyword">import</span> cn.study.lu.mapper.CategoryMapper;</span><br><span class="line"><span class="keyword">import</span> cn.study.lu.mapper.PictureMapper;</span><br><span class="line"><span class="keyword">import</span> cn.study.lu.service.FileUploadService;</span><br><span class="line"><span class="keyword">import</span> cn.study.model.dto.lu.CategoryReverseRecursionDto;</span><br><span class="line"><span class="keyword">import</span> cn.study.model.entity.mp.Category;</span><br><span class="line"><span class="keyword">import</span> cn.study.model.entity.lu.Picture;</span><br><span class="line"><span class="keyword">import</span> cn.study.utils.DateUtils;</span><br><span class="line"><span class="keyword">import</span> io.minio.BucketExistsArgs;</span><br><span class="line"><span class="keyword">import</span> io.minio.MakeBucketArgs;</span><br><span class="line"><span class="keyword">import</span> io.minio.MinioClient;</span><br><span class="line"><span class="keyword">import</span> io.minio.PutObjectArgs;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.multipart.MultipartFile;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Objects;</span><br><span class="line"><span class="keyword">import</span> java.util.UUID;</span><br><span class="line"><span class="keyword">import</span> java.util.stream.Collectors;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FileUploadServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">FileUploadService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> MinioProperties minioProperties ;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> PictureMapper pictureMapper;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> CategoryMapper categoryMapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">fileUpload</span><span class="params">(MultipartFile multipartFile)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 创建一个Minio的客户端对象</span></span><br><span class="line">            <span class="type">MinioClient</span> <span class="variable">minioClient</span> <span class="operator">=</span> MinioClient.builder()</span><br><span class="line">                    .endpoint(minioProperties.getEndpoint())</span><br><span class="line">                    .credentials(minioProperties.getAccessKey(), minioProperties.getSecretKey())</span><br><span class="line">                    .build();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 判断桶是否存在</span></span><br><span class="line">            <span class="type">boolean</span> <span class="variable">found</span> <span class="operator">=</span> minioClient.bucketExists(BucketExistsArgs.builder().bucket(minioProperties.getBucket()).build());</span><br><span class="line">            <span class="keyword">if</span> (!found) &#123;       <span class="comment">// 如果不存在，那么此时就创建一个新的桶</span></span><br><span class="line">                minioClient.makeBucket(MakeBucketArgs.builder().bucket(minioProperties.getBucket()).build());</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;  <span class="comment">// 如果存在打印信息</span></span><br><span class="line">                System.out.println(<span class="string">&quot;Bucket  already exists.&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 设置存储对象名称</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">dateDir</span> <span class="operator">=</span> DateUtil.format(<span class="keyword">new</span> <span class="title class_">Date</span>(), <span class="string">&quot;yyyyMMdd&quot;</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">uuid</span> <span class="operator">=</span> UUID.randomUUID().toString().replace(<span class="string">&quot;-&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">            <span class="comment">//20230801/443e1e772bef482c95be28704bec58a901.jpg</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">fileName</span> <span class="operator">=</span> dateDir+<span class="string">&quot;/&quot;</span>+uuid+multipartFile.getOriginalFilename();</span><br><span class="line">            System.out.println(fileName);</span><br><span class="line"></span><br><span class="line">            <span class="type">PutObjectArgs</span> <span class="variable">putObjectArgs</span> <span class="operator">=</span> PutObjectArgs.builder()</span><br><span class="line">                    .bucket(minioProperties.getBucket())</span><br><span class="line">                    .stream(multipartFile.getInputStream(), multipartFile.getSize(), -<span class="number">1</span>)</span><br><span class="line">                    .object(fileName)</span><br><span class="line">                    .build();</span><br><span class="line">            minioClient.putObject(putObjectArgs) ;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="type">String</span> <span class="variable">path</span> <span class="operator">=</span> minioProperties.getEndpoint() + <span class="string">&quot;/&quot;</span> + minioProperties.getBucket() + <span class="string">&quot;/&quot;</span> + fileName;</span><br><span class="line"></span><br><span class="line">            <span class="type">Picture</span> <span class="variable">picture</span> <span class="operator">=</span> Picture.builder()</span><br><span class="line">                    .id(UUID.randomUUID().toString())</span><br><span class="line">                    .url(path)</span><br><span class="line">                    .createTime(DateUtils.getNowDate())</span><br><span class="line">                    .updateTime(DateUtils.getNowDate()).build();</span><br><span class="line">            pictureMapper.insert(picture);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span>  path;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>启动项目在apifox进行测试</li></ul><p><img src="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311161552507.png"></p><p><img src="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311161552962.png"></p><ul><li>最后测试成功</li></ul>]]></content>
      
      
      <categories>
          
          <category> 配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置 </tag>
            
            <tag> minio </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo配置自定义域名</title>
      <link href="/posts/22910.html"/>
      <url>/posts/22910.html</url>
      
        <content type="html"><![CDATA[<h2 id="本文主要介绍搭建个人博客时如何使用已购买的域名访问"><a href="#本文主要介绍搭建个人博客时如何使用已购买的域名访问" class="headerlink" title="本文主要介绍搭建个人博客时如何使用已购买的域名访问"></a>本文主要介绍搭建个人博客时如何使用已购买的域名访问</h2><h3 id="首先要有自己的hexo博客并且已经成功部署且能访问"><a href="#首先要有自己的hexo博客并且已经成功部署且能访问" class="headerlink" title="首先要有自己的hexo博客并且已经成功部署且能访问"></a>首先要有自己的hexo博客并且已经成功部署且能访问</h3><p>​    <img src="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311151450423.png"></p><h5 id="访问链接-https-xhxr-xyz"><a href="#访问链接-https-xhxr-xyz" class="headerlink" title="访问链接:https://xhxr.xyz/"></a>访问链接:<a href="https://xhxr.xyz/">https://xhxr.xyz/</a></h5><h2 id="其次需要在阿里云或腾讯云以及其他平台注册或购买域名"><a href="#其次需要在阿里云或腾讯云以及其他平台注册或购买域名" class="headerlink" title="其次需要在阿里云或腾讯云以及其他平台注册或购买域名"></a>其次需要在阿里云或腾讯云以及其他平台注册或购买域名</h2><ul><li><p>如何购买域名自行搜索</p></li><li><p>搜索阿里云找到工作台搜索域名</p><p><img src="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311151454905.png"></p></li><li><h3 id="点击域名列表并点击解析"><a href="#点击域名列表并点击解析" class="headerlink" title="点击域名列表并点击解析"></a>点击域名列表并点击解析</h3><p><img src="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311151500918.png"></p></li><li><h3 id="进入解析页面点击添加记录"><a href="#进入解析页面点击添加记录" class="headerlink" title="进入解析页面点击添加记录"></a>进入解析页面点击添加记录</h3></li></ul><p><img src="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311151506795.png"></p><p><img src="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311151507316.png"></p><ul><li><h3 id="最后进入github-com找到博客仓库的Settings的Pages"><a href="#最后进入github-com找到博客仓库的Settings的Pages" class="headerlink" title="最后进入github.com找到博客仓库的Settings的Pages"></a>最后进入github.com找到博客仓库的Settings的Pages</h3></li></ul><p><img src="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311151510783.png"></p><ul><li><h5 id="注意当配置后并进行二次发布测试时就会出现配置的域名无法访问的情况-第一次不会"><a href="#注意当配置后并进行二次发布测试时就会出现配置的域名无法访问的情况-第一次不会" class="headerlink" title="注意当配置后并进行二次发布测试时就会出现配置的域名无法访问的情况(第一次不会)"></a>注意当配置后并进行二次发布测试时就会出现配置的域名无法访问的情况(第一次不会)</h5></li><li><h5 id="所以我们采取一次配置永久使用的方法"><a href="#所以我们采取一次配置永久使用的方法" class="headerlink" title="所以我们采取一次配置永久使用的方法"></a>所以我们采取一次配置永久使用的方法</h5></li><li><h5 id="在博客目录下的source文件下创建CNAME文件-注意文件不带任何后缀"><a href="#在博客目录下的source文件下创建CNAME文件-注意文件不带任何后缀" class="headerlink" title="在博客目录下的source文件下创建CNAME文件 注意文件不带任何后缀"></a>在博客目录下的source文件下创建CNAME文件 注意文件不带任何后缀</h5></li></ul><p><img src="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/202311151715342.png"></p><ul><li><h5 id="在CNAME文件中配置上自己的域名即可-其他无需配置"><a href="#在CNAME文件中配置上自己的域名即可-其他无需配置" class="headerlink" title="在CNAME文件中配置上自己的域名即可  其他无需配置"></a>在CNAME文件中配置上自己的域名即可  其他无需配置</h5></li><li><h5 id="再次重新清空生成发布访问即可-建议多次进行小改动并发布测试域名访问能否成功"><a href="#再次重新清空生成发布访问即可-建议多次进行小改动并发布测试域名访问能否成功" class="headerlink" title="再次重新清空生成发布访问即可 建议多次进行小改动并发布测试域名访问能否成功"></a>再次重新清空生成发布访问即可 建议多次进行小改动并发布测试域名访问能否成功</h5></li></ul><h2 id="最后祝大家配置顺利"><a href="#最后祝大家配置顺利" class="headerlink" title="最后祝大家配置顺利"></a>最后祝大家配置顺利</h2>]]></content>
      
      
      <categories>
          
          <category> hexo配置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置 </tag>
            
            <tag> 阿里云 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>测试视频</title>
      <link href="/posts/16888.html"/>
      <url>/posts/16888.html</url>
      
        <content type="html"><![CDATA[<div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe src="//player.bilibili.com/player.html?aid=920116117&bvid=BV1ru4y1n7sm&cid=1310531125&p=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; Left: 0; top: 0;"> </iframe></div>]]></content>
      
      
      <categories>
          
          <category> 视频 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> B站 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Convert转换时间所避的坑</title>
      <link href="/posts/58565.html"/>
      <url>/posts/58565.html</url>
      
        <content type="html"><![CDATA[<h5 id="hutool工具类依赖"><a href="#hutool工具类依赖" class="headerlink" title="hutool工具类依赖"></a>hutool工具类依赖</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">           &lt;groupId&gt;cn.hutool&lt;/groupId&gt;</span><br><span class="line">           &lt;artifactId&gt;hutool-all&lt;/artifactId&gt;</span><br><span class="line">           &lt;version&gt;5.5.2&lt;/version&gt;</span><br><span class="line">       &lt;/dependency&gt;</span><br></pre></td></tr></table></figure><h5 id="由图可见hutool工具类自带时间转换器时-需要转换的对象小于转换格式时就会为空"><a href="#由图可见hutool工具类自带时间转换器时-需要转换的对象小于转换格式时就会为空" class="headerlink" title="由图可见hutool工具类自带时间转换器时 需要转换的对象小于转换格式时就会为空"></a>由图可见hutool工具类自带时间转换器时 需要转换的对象小于转换格式时就会为空</h5><p><img src="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20231110145406.png"></p><p><img src="https://lu-myblog.oss-cn-hangzhou.aliyuncs.com/blog/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20231110145414.png"></p><h5 id="正确实例如下"><a href="#正确实例如下" class="headerlink" title="正确实例如下"></a>正确实例如下</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">String <span class="built_in">test</span>=<span class="string">&quot;2013-10-10 15:35:45&quot;</span>;</span><br><span class="line">        LocalDateTime dateTime = Convert.toLocalDateTime(<span class="built_in">test</span>);</span><br><span class="line">        System.out.println(dateTime);//2013-10-10T15:35:45</span><br><span class="line">        String format1 = DateUtil.format(dateTime, <span class="string">&quot;HH:mm&quot;</span>);</span><br><span class="line">        System.out.println(format1);//15:35</span><br><span class="line">        String format2 = DateUtil.format(dateTime, <span class="string">&quot;yyyy-MM&quot;</span>);</span><br><span class="line">        System.out.println(format2);//2013-10</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 时间工具类 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>定时任务</title>
      <link href="/posts/21635.html"/>
      <url>/posts/21635.html</url>
      
        <content type="html"><![CDATA[<h5 id="先创建一个类用于完成定时任务的代码编写的抽象方法"><a href="#先创建一个类用于完成定时任务的代码编写的抽象方法" class="headerlink" title="先创建一个类用于完成定时任务的代码编写的抽象方法"></a>先创建一个类用于完成定时任务的代码编写的抽象方法</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.qyny.common.config.quarz.handle;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.math.BigDecimal;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 任务处理方法的接口类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">JobHandler</span> &#123;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">handle</span><span class="params">()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 生成两个整数之间的随机小数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> min   最小值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> max   最大值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> num   保留小数点位数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">default</span> BigDecimal <span class="title function_">generateRandomDouble</span><span class="params">(<span class="type">int</span> min, <span class="type">int</span> max, <span class="type">int</span> num)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">BigDecimal</span>(min+Math.random()*(max-min)).setScale(num,BigDecimal.ROUND_HALF_UP);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="再定义一个类去实现抽象类完成定时任务的编写"><a href="#再定义一个类去实现抽象类完成定时任务的编写" class="headerlink" title="再定义一个类去实现抽象类完成定时任务的编写"></a>再定义一个类去实现抽象类完成定时任务的编写</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.qyny.common.config.quarz.job.genAlarm;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;</span><br><span class="line"><span class="keyword">import</span> com.qyny.common.config.quarz.handle.JobHandler;</span><br><span class="line"><span class="keyword">import</span> com.qyny.common.constant.LocalDateConstant;</span><br><span class="line"><span class="keyword">import</span> com.qyny.common.utils.LocalDateUtils;</span><br><span class="line"><span class="keyword">import</span> com.qyny.equipmentManagement.dao.DeviceInfoMapper;</span><br><span class="line"><span class="keyword">import</span> com.qyny.equipmentManagement.entity.DeviceInfo;</span><br><span class="line"><span class="keyword">import</span> com.qyny.equipmentMonitoring.dao.TAlarmDataMapper;</span><br><span class="line"><span class="keyword">import</span> com.qyny.equipmentMonitoring.dao.TAlarmParamInfoMapper;</span><br><span class="line"><span class="keyword">import</span> com.qyny.equipmentMonitoring.entity.TAlarmDataEntity;</span><br><span class="line"><span class="keyword">import</span> com.qyny.equipmentMonitoring.entity.TAlarmParamInfoEntity;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.annotation.Transactional;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.time.LocalDateTime;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GenerateAlarmHandler</span> <span class="keyword">implements</span> <span class="title class_">JobHandler</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> TAlarmParamInfoMapper tAlarmParamInfoMapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> TAlarmDataMapper alarmDataMapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> DeviceInfoMapper deviceInfoMapper;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="meta">@Transactional(rollbackFor = Exception.class)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">handle</span><span class="params">()</span> &#123;</span><br><span class="line">        log.debug(<span class="string">&quot;定时报警start&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//报警参数列表</span></span><br><span class="line">        QueryWrapper&lt;TAlarmParamInfoEntity&gt; tAlarmParamInfoMapperQueryWrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">        tAlarmParamInfoMapperQueryWrapper.lambda().eq(TAlarmParamInfoEntity::getIsEnabled,<span class="number">1</span>);</span><br><span class="line">        tAlarmParamInfoMapperQueryWrapper.lambda().eq(TAlarmParamInfoEntity::getIsDeleted,<span class="number">0</span>);</span><br><span class="line">        List&lt;TAlarmParamInfoEntity&gt; alarmParamInfoEntityList = tAlarmParamInfoMapper.selectList(tAlarmParamInfoMapperQueryWrapper);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//设备列表</span></span><br><span class="line">        QueryWrapper&lt;DeviceInfo&gt; deviceInfoQueryWrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">        deviceInfoQueryWrapper.lambda().eq(DeviceInfo::getIsDeleted,<span class="number">0</span>);</span><br><span class="line">        deviceInfoQueryWrapper.lambda().eq(DeviceInfo::getIsEnabled,<span class="number">1</span>);</span><br><span class="line">        List&lt;DeviceInfo&gt; deviceInfoList = deviceInfoMapper.selectList(deviceInfoQueryWrapper);</span><br><span class="line"></span><br><span class="line">        LocalDateTime currentTime= LocalDateUtils.getCurrentTime();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//查询是否生成过</span></span><br><span class="line">        QueryWrapper&lt;TAlarmDataEntity&gt; alarmDataEntityQueryWrapper = <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>&lt;&gt;();</span><br><span class="line">        alarmDataEntityQueryWrapper.lambda().eq(TAlarmDataEntity::getIsDeleted,<span class="number">0</span>);</span><br><span class="line">        alarmDataEntityQueryWrapper.lambda().like(TAlarmDataEntity::getCreateTime,currentTime.format(LocalDateConstant.DEFAULT_DATE_HOUR_FORMAT));</span><br><span class="line">        List&lt;TAlarmDataEntity&gt; tAlarmDataEntityList = alarmDataMapper.selectList(alarmDataEntityQueryWrapper);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(tAlarmDataEntityList.size()==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="comment">//生成报警</span></span><br><span class="line">            <span class="keyword">for</span> (DeviceInfo deviceInfo : deviceInfoList) &#123;</span><br><span class="line">                <span class="comment">//随机一个报警类型</span></span><br><span class="line">                <span class="type">int</span> <span class="variable">size</span> <span class="operator">=</span> alarmParamInfoEntityList.size();</span><br><span class="line">                <span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Random</span>().nextInt(size - <span class="number">1</span>);</span><br><span class="line">                <span class="type">TAlarmParamInfoEntity</span> <span class="variable">paramInfoEntity</span> <span class="operator">=</span> alarmParamInfoEntityList.get(index);</span><br><span class="line"></span><br><span class="line">                TAlarmDataEntity entity=<span class="keyword">new</span> <span class="title class_">TAlarmDataEntity</span>();</span><br><span class="line">                entity.setDeviceId(deviceInfo.getId());</span><br><span class="line">                entity.setAlarmParamId(paramInfoEntity.getId());</span><br><span class="line">                entity.setAlarmSource(<span class="string">&quot;模拟数据&quot;</span>);</span><br><span class="line">                entity.setAlarmsNumber(<span class="number">1</span>);</span><br><span class="line">                entity.setWarehouseTime(currentTime);</span><br><span class="line">                entity.setCreateTime(currentTime);</span><br><span class="line">                entity.setIsDeleted(<span class="number">0</span>);</span><br><span class="line">                tAlarmDataEntityList.add(entity);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            alarmDataMapper.batchInsert(tAlarmDataEntityList);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">for</span> (TAlarmDataEntity alarmDataEntity : tAlarmDataEntityList) &#123;</span><br><span class="line">                alarmDataEntity.setWarehouseTime(currentTime);</span><br><span class="line">                alarmDataEntity.setUpdateTime(currentTime);</span><br><span class="line">            &#125;</span><br><span class="line">            alarmDataMapper.batchUpdate(tAlarmDataEntityList);</span><br><span class="line">        &#125;</span><br><span class="line">        log.debug(<span class="string">&quot;定时报警end&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在定时一个类继承定时任务并注入已经完成的定时任务方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.qyny.common.config.quarz.job.genAlarm;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.qyny.common.config.quarz.handle.JobHandler;</span><br><span class="line"><span class="keyword">import</span> org.quartz.DisallowConcurrentExecution;</span><br><span class="line"><span class="keyword">import</span> org.quartz.JobExecutionContext;</span><br><span class="line"><span class="keyword">import</span> org.quartz.JobExecutionException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.scheduling.quartz.QuartzJobBean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.transaction.annotation.Transactional;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"><span class="meta">@DisallowConcurrentExecution</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GenerateAlarmJob</span> <span class="keyword">extends</span> <span class="title class_">QuartzJobBean</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource(type = GenerateAlarmHandler.class)</span></span><br><span class="line">    <span class="keyword">private</span> JobHandler jobHandler;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">executeInternal</span><span class="params">(JobExecutionContext context)</span> <span class="keyword">throws</span> JobExecutionException &#123;</span><br><span class="line">        jobHandler.handle();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="最后创建定时任务配置类"><a href="#最后创建定时任务配置类" class="headerlink" title="最后创建定时任务配置类"></a>最后创建定时任务配置类</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.qyny.common.config.quarz;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.qyny.common.config.quarz.job.genAlarm.GenerateAlarmJob;</span><br><span class="line"><span class="keyword">import</span> com.qyny.common.config.quarz.job.genAlarm.RealTimeAlarmJob;</span><br><span class="line"><span class="keyword">import</span> com.qyny.common.config.quarz.job.genAlarm.WarningBoardJob;</span><br><span class="line"><span class="keyword">import</span> com.qyny.common.config.quarz.job.genAmmeter.GenerateAmmeterDataJob;</span><br><span class="line"><span class="keyword">import</span> com.qyny.common.config.quarz.job.genBattery.GenerateBatteryDataJob;</span><br><span class="line"><span class="keyword">import</span> com.qyny.common.config.quarz.job.genBox.GenerateBoxDataJob;</span><br><span class="line"><span class="keyword">import</span> com.qyny.common.config.quarz.job.genClumps.GenerateClumpsDataJob;</span><br><span class="line"><span class="keyword">import</span> com.qyny.common.config.quarz.job.genHeap.GenerateHeapDataJob;</span><br><span class="line"><span class="keyword">import</span> com.qyny.common.config.quarz.job.genParallelCabinet.GenerateParallelCabinetDataJob;</span><br><span class="line"><span class="keyword">import</span> com.qyny.common.config.quarz.job.genPcs.GeneratePcsDataJob;</span><br><span class="line"><span class="keyword">import</span> com.qyny.common.config.quarz.job.genThreshold.GenerateThresholdDataJob;</span><br><span class="line"><span class="keyword">import</span> com.qyny.common.config.quarz.job.push.PushEquipmentDataJob;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.quartz.*;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">QuartzConfig</span> &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//定时报警任务</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> JobDetail <span class="title function_">generateAlarmJob</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> JobBuilder.newJob(GenerateAlarmJob.class)</span><br><span class="line">                .withIdentity(<span class="string">&quot;generateAlarmJob&quot;</span>)</span><br><span class="line">                .withDescription(<span class="string">&quot;定时报警任务&quot;</span>)</span><br><span class="line">                .storeDurably()</span><br><span class="line">                .build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//定时报警任务 trigger</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> Trigger <span class="title function_">generatAlarmTrigger</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//创建触发器</span></span><br><span class="line">        <span class="keyword">return</span> TriggerBuilder.newTrigger()</span><br><span class="line">                <span class="comment">// 绑定工作任务</span></span><br><span class="line">                .forJob(generateAlarmJob())</span><br><span class="line">                <span class="comment">// 每隔 1秒执行一次 job</span></span><br><span class="line">                .withSchedule(CronScheduleBuilder.cronSchedule(<span class="string">&quot;0/1 * * * * ?&quot;</span>))</span><br><span class="line">                .build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">   </span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> 定时任务 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>发包流程</title>
      <link href="/posts/34134.html"/>
      <url>/posts/34134.html</url>
      
        <content type="html"><![CDATA[<h5 id="步骤一"><a href="#步骤一" class="headerlink" title="步骤一"></a>步骤一</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/app/cn-app/service   进入发包的目录</span><br></pre></td></tr></table></figure><h5 id="步骤二"><a href="#步骤二" class="headerlink" title="步骤二"></a>步骤二</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -ef |grep qyny</span><br></pre></td></tr></table></figure><h5 id="步骤三"><a href="#步骤三" class="headerlink" title="步骤三"></a>步骤三</h5><ul><li>查看jar包的进程ID  并杀死</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">kill</span> -9 xx</span><br></pre></td></tr></table></figure><h5 id="步骤四"><a href="#步骤四" class="headerlink" title="步骤四"></a>步骤四</h5><ul><li>启动服务</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">nohup</span> java -jar qyny_service_code-0.0.1-SNAPSHOT.jar  &gt;text.out 2&gt;&amp;1&amp;</span><br></pre></td></tr></table></figure><h5 id="步骤五"><a href="#步骤五" class="headerlink" title="步骤五"></a>步骤五</h5><ul><li>查看启动日志  确认程序正常启动</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">tail</span> -f text.out</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 配置文件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置 </tag>
            
            <tag> 虚拟机 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
